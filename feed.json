{
    "version": "https://jsonfeed.org/version/1",
    "title": "Kusa",
    "home_page_url": "https://cypherpunksamurai.github.io/Kusa-Jekyll/",
    "feed_url": "https://cypherpunksamurai.github.io/Kusa-Jekyll/feed.json",
    "description": "just a minimalist, personal blog",
    "icon": "https://cypherpunksamurai.github.io/Kusa-Jekyll/apple-touch-icon.png",
    "favicon": "https://cypherpunksamurai.github.io/Kusa-Jekyll/favicon.ico",
    "expired": false,
    
    "author":  {
        "name": "Kusa",
        "url": null,
        "avatar": null
    },
    
"items": [
    
        {
            "id": "https://cypherpunksamurai.github.io/Kusa-Jekyll/2017/11/16/git-quick",
            "title": "Git Quick",
            "summary": "Git Quickstart Tutorial",
            "content_text": "Git Quick!In this tutorial we will learn basic to advanced uses of git versioning system.Quick Recap of Terms  Git - A versioning system for managing files  Git Repo (Repository) - A git repo is an instance of the git versioning system  BasicsInitializing a Repository",
            "content_html": "<h1 id=\"git-quick\">Git Quick!</h1><p>In this tutorial we will learn basic to advanced uses of git versioning system.</p><h2 id=\"quick-recap-of-terms\">Quick Recap of Terms</h2><ul>  <li>Git - A versioning system for managing files</li>  <li>Git Repo (Repository) - A git repo is an instance of the git versioning system</li>  <li></li></ul><h2 id=\"basics\">Basics</h2><h3 id=\"initializing-a-repository\">Initializing a Repository</h3>",
            "url": "https://cypherpunksamurai.github.io/Kusa-Jekyll/2017/11/16/git-quick",
            
            
            
            "tags": ["git","quickstart"],
            
            "date_published": "2017-11-16T00:00:00+00:00",
            "date_modified": "2017-11-16T00:00:00+00:00",
            
                "author":  {
                "name": "Kusa",
                "url": null,
                "avatar": null
                }
                
            
        },
    
        {
            "id": "https://cypherpunksamurai.github.io/Kusa-Jekyll/2017/11/15/custom-404-page-for-jekyll-on-github-pages",
            "title": "Custom 404 page for Jekyll on Github pages",
            "summary": "Serve custom 404 error pages with Jekyll",
            "content_text": "Lorem ipsum dolor amet tousled viral art party blue bottle single-origin coffee cardigan, selvage man braid helvetica. Banh mi taxidermy meditation microdosing. Selvage cornhole YOLO, small batch vexillologist raclette VHS prism sustainable 8-bit ugh semiotics letterpress disrupt pop-up. Celiac shabby chic ugh, jianbing whatever kitsch tattooed edison bulb kogi irony etsy.Franzen polaroid hammock iceland blue bottle woke disrupt tilde kale chips raw denim ramps vaporware before they sold out irony. Narwhal vaporware offal shaman celiac kinfolk activated charcoal salvia lomo irony readymade normcore. Yr activated charcoal kombucha, man braid whatever biodiesel hella crucifix adaptogen bicycle rights small batch skateboard mixtape. Hot chicken sustainable green juice 90’s. Ennui kickstarter hella pug, meggings man bun shaman messenger bag. Chambray adaptogen kombucha pug affogato, kogi green juice distillery ugh banh mi.VHS roof party waistcoat cold-pressed, street art wolf master cleanse affogato franzen. Shaman iceland pour-over intelligentsia typewriter tilde, pitchfork copper mug. Wayfarers kickstarter adaptogen vinyl beard kombucha. Organic pinterest master cleanse, mixtape fam gentrify lo-fi kogi.Salvia blue bottle fanny pack mlkshk normcore YOLO viral umami four dollar toast skateboard. Chambray taxidermy slow-carb street art chartreuse. Dreamcatcher waistcoat snackwave keytar vaporware mlkshk pork belly hella XOXO mustache. Tattooed semiotics edison bulb, disrupt polaroid craft beer vape enamel pin bespoke flannel letterpress brooklyn subway tile copper mug. Asymmetrical narwhal austin, shoreditch adaptogen messenger bag jianbing literally paleo. Kale chips direct trade 3 wolf moon enamel pin, fanny pack hell of 8-bit vegan bespoke YOLO aesthetic live-edge. Retro succulents before they sold out whatever bushwick.Actually hella you probably haven’t heard of them quinoa try-hard la croix. Street art schlitz actually hell of pour-over air plant. Post-ironic franzen brunch mumblecore readymade. Food truck photo booth polaroid, gochujang vegan street art yr before they sold out man bun. Tilde selfies chia pitchfork everyday carry post-ironic mumblecore sartorial VHS master cleanse activated charcoal biodiesel williamsburg cronut jean shorts. Poutine helvetica keffiyeh butcher pop-up.",
            "content_html": "<p>Lorem ipsum dolor amet tousled viral art party blue bottle single-origin coffee cardigan, selvage man braid helvetica. Banh mi taxidermy meditation microdosing. Selvage cornhole YOLO, small batch vexillologist raclette VHS prism sustainable 8-bit ugh semiotics letterpress disrupt pop-up. Celiac shabby chic ugh, jianbing whatever kitsch tattooed edison bulb kogi irony etsy.</p><p>Franzen polaroid hammock iceland blue bottle woke disrupt tilde kale chips raw denim ramps vaporware before they sold out irony. Narwhal vaporware offal shaman celiac kinfolk activated charcoal salvia lomo irony readymade normcore. Yr activated charcoal kombucha, man braid whatever biodiesel hella crucifix adaptogen bicycle rights small batch skateboard mixtape. Hot chicken sustainable green juice 90’s. Ennui kickstarter hella pug, meggings man bun shaman messenger bag. Chambray adaptogen kombucha pug affogato, kogi green juice distillery ugh banh mi.</p><p>VHS roof party waistcoat cold-pressed, street art wolf master cleanse affogato franzen. Shaman iceland pour-over intelligentsia typewriter tilde, pitchfork copper mug. Wayfarers kickstarter adaptogen vinyl beard kombucha. Organic pinterest master cleanse, mixtape fam gentrify lo-fi kogi.</p><p>Salvia blue bottle fanny pack mlkshk normcore YOLO viral umami four dollar toast skateboard. Chambray taxidermy slow-carb street art chartreuse. Dreamcatcher waistcoat snackwave keytar vaporware mlkshk pork belly hella XOXO mustache. Tattooed semiotics edison bulb, disrupt polaroid craft beer vape enamel pin bespoke flannel letterpress brooklyn subway tile copper mug. Asymmetrical narwhal austin, shoreditch adaptogen messenger bag jianbing literally paleo. Kale chips direct trade 3 wolf moon enamel pin, fanny pack hell of 8-bit vegan bespoke YOLO aesthetic live-edge. Retro succulents before they sold out whatever bushwick.</p><p>Actually hella you probably haven’t heard of them quinoa try-hard la croix. Street art schlitz actually hell of pour-over air plant. Post-ironic franzen brunch mumblecore readymade. Food truck photo booth polaroid, gochujang vegan street art yr before they sold out man bun. Tilde selfies chia pitchfork everyday carry post-ironic mumblecore sartorial VHS master cleanse activated charcoal biodiesel williamsburg cronut jean shorts. Poutine helvetica keffiyeh butcher pop-up.</p>",
            "url": "https://cypherpunksamurai.github.io/Kusa-Jekyll/2017/11/15/custom-404-page-for-jekyll-on-github-pages",
            
            
            
            "tags": ["jekyll","coding"],
            
            "date_published": "2017-11-15T00:00:00+00:00",
            "date_modified": "2017-11-15T00:00:00+00:00",
            
                "author":  {
                "name": "Kusa",
                "url": null,
                "avatar": null
                }
                
            
        },
    
        {
            "id": "https://cypherpunksamurai.github.io/Kusa-Jekyll/2017/11/10/redirect-jekyll-urls",
            "title": "Redirect Jekyll URLs",
            "summary": "How to Redirect Pages in Jekyll",
            "content_text": "Lorem ipsum dolor amet tousled viral art party blue bottle single-origin coffee cardigan, selvage man braid helvetica. Banh mi taxidermy meditation microdosing. Selvage cornhole YOLO, small batch vexillologist raclette VHS prism sustainable 8-bit ugh semiotics letterpress disrupt pop-up. Celiac shabby chic ugh, jianbing whatever kitsch tattooed edison bulb kogi irony etsy.Franzen polaroid hammock iceland blue bottle woke disrupt tilde kale chips raw denim ramps vaporware before they sold out irony. Narwhal vaporware offal shaman celiac kinfolk activated charcoal salvia lomo irony readymade normcore. Yr activated charcoal kombucha, man braid whatever biodiesel hella crucifix adaptogen bicycle rights small batch skateboard mixtape. Hot chicken sustainable green juice 90’s. Ennui kickstarter hella pug, meggings man bun shaman messenger bag. Chambray adaptogen kombucha pug affogato, kogi green juice distillery ugh banh mi.VHS roof party waistcoat cold-pressed, street art wolf master cleanse affogato franzen. Shaman iceland pour-over intelligentsia typewriter tilde, pitchfork copper mug. Wayfarers kickstarter adaptogen vinyl beard kombucha. Organic pinterest master cleanse, mixtape fam gentrify lo-fi kogi.Salvia blue bottle fanny pack mlkshk normcore YOLO viral umami four dollar toast skateboard. Chambray taxidermy slow-carb street art chartreuse. Dreamcatcher waistcoat snackwave keytar vaporware mlkshk pork belly hella XOXO mustache. Tattooed semiotics edison bulb, disrupt polaroid craft beer vape enamel pin bespoke flannel letterpress brooklyn subway tile copper mug. Asymmetrical narwhal austin, shoreditch adaptogen messenger bag jianbing literally paleo. Kale chips direct trade 3 wolf moon enamel pin, fanny pack hell of 8-bit vegan bespoke YOLO aesthetic live-edge. Retro succulents before they sold out whatever bushwick.Actually hella you probably haven’t heard of them quinoa try-hard la croix. Street art schlitz actually hell of pour-over air plant. Post-ironic franzen brunch mumblecore readymade. Food truck photo booth polaroid, gochujang vegan street art yr before they sold out man bun. Tilde selfies chia pitchfork everyday carry post-ironic mumblecore sartorial VHS master cleanse activated charcoal biodiesel williamsburg cronut jean shorts. Poutine helvetica keffiyeh butcher pop-up.",
            "content_html": "<p>Lorem ipsum dolor amet tousled viral art party blue bottle single-origin coffee cardigan, selvage man braid helvetica. Banh mi taxidermy meditation microdosing. Selvage cornhole YOLO, small batch vexillologist raclette VHS prism sustainable 8-bit ugh semiotics letterpress disrupt pop-up. Celiac shabby chic ugh, jianbing whatever kitsch tattooed edison bulb kogi irony etsy.</p><p>Franzen polaroid hammock iceland blue bottle woke disrupt tilde kale chips raw denim ramps vaporware before they sold out irony. Narwhal vaporware offal shaman celiac kinfolk activated charcoal salvia lomo irony readymade normcore. Yr activated charcoal kombucha, man braid whatever biodiesel hella crucifix adaptogen bicycle rights small batch skateboard mixtape. Hot chicken sustainable green juice 90’s. Ennui kickstarter hella pug, meggings man bun shaman messenger bag. Chambray adaptogen kombucha pug affogato, kogi green juice distillery ugh banh mi.</p><p>VHS roof party waistcoat cold-pressed, street art wolf master cleanse affogato franzen. Shaman iceland pour-over intelligentsia typewriter tilde, pitchfork copper mug. Wayfarers kickstarter adaptogen vinyl beard kombucha. Organic pinterest master cleanse, mixtape fam gentrify lo-fi kogi.</p><p>Salvia blue bottle fanny pack mlkshk normcore YOLO viral umami four dollar toast skateboard. Chambray taxidermy slow-carb street art chartreuse. Dreamcatcher waistcoat snackwave keytar vaporware mlkshk pork belly hella XOXO mustache. Tattooed semiotics edison bulb, disrupt polaroid craft beer vape enamel pin bespoke flannel letterpress brooklyn subway tile copper mug. Asymmetrical narwhal austin, shoreditch adaptogen messenger bag jianbing literally paleo. Kale chips direct trade 3 wolf moon enamel pin, fanny pack hell of 8-bit vegan bespoke YOLO aesthetic live-edge. Retro succulents before they sold out whatever bushwick.</p><p>Actually hella you probably haven’t heard of them quinoa try-hard la croix. Street art schlitz actually hell of pour-over air plant. Post-ironic franzen brunch mumblecore readymade. Food truck photo booth polaroid, gochujang vegan street art yr before they sold out man bun. Tilde selfies chia pitchfork everyday carry post-ironic mumblecore sartorial VHS master cleanse activated charcoal biodiesel williamsburg cronut jean shorts. Poutine helvetica keffiyeh butcher pop-up.</p>",
            "url": "https://cypherpunksamurai.github.io/Kusa-Jekyll/2017/11/10/redirect-jekyll-urls",
            
            
            
            "tags": ["coding","jekyll"],
            
            "date_published": "2017-11-10T00:00:00+00:00",
            "date_modified": "2017-11-10T00:00:00+00:00",
            
                "author":  {
                "name": "Kusa",
                "url": null,
                "avatar": null
                }
                
            
        },
    
        {
            "id": "https://cypherpunksamurai.github.io/Kusa-Jekyll/2017/11/01/quotes-test",
            "title": "Jekyll Quotes - Test",
            "summary": "Test Jekyll Quotes in posts",
            "content_text": "Jekyll Quotes - TestNormal Quotes  This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.  Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisseid sem consectetuer libero luctus adipiscing.Quotes with list  This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.  Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisseid sem consectetuer libero luctus adipiscing.  List 1:      A    B    C    D    E    List 2:      Rice    Eggs    Meat  Quotes With Code  This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.  Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisseid sem consectetuer libero luctus adipiscing.  print(\"This is a inline code block in quotes\")  # this is python codeprint(\"Hello Jekyll!\")  Quotes with headers  This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.  Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisseid sem consectetuer libero luctus adipiscing.  Header 1  This is text under Header 1`fmt.printf(“Hi Header 1”)  Header 2  This is text under header 2  Header 3  This is text under header 3  Header 4  This is text under header 4  Header 5  This is text under header 5Quotes with Multiple Quotes  This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.  Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisseid sem consectetuer libero luctus adipiscing.  Here is a quote from a book      The secret of your future is hidden in your daily routine. - Mike Murdock    This is a double quoted code    Issue 1 - Please add new fonts    The theme looks nice, and i want to customize it. Please add fontsI think i would like to use Source Code Mono font for the code.    Here lies the python –&gt;    # this is python codeprint(\"Hi Jekyll\")        Golang:    func main() { // this is go code fmt.Print(\"Hi Jekyll!\")}      ",
            "content_html": "<h1 id=\"jekyll-quotes---test\">Jekyll Quotes - Test</h1><h2 id=\"normal-quotes\">Normal Quotes</h2><blockquote>  <p>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</p>  <p>Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisseid sem consectetuer libero luctus adipiscing.</p></blockquote><h2 id=\"quotes-with-list\">Quotes with list</h2><blockquote>  <p>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</p>  <p>Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisseid sem consectetuer libero luctus adipiscing.</p>  <p>List 1:</p>  <ol>    <li>A</li>    <li>B</li>    <li>C</li>    <li>D</li>    <li>E</li>  </ol>  <p>List 2:</p>  <ul>    <li>Rice</li>    <li>Eggs</li>    <li>Meat</li>  </ul></blockquote><h2 id=\"quotes-with-code\">Quotes With Code</h2><blockquote>  <p>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</p>  <p>Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisseid sem consectetuer libero luctus adipiscing.</p>  <p><code class=\"language-plaintext highlighter-rouge\">print(\"This is a inline code block in quotes\")</code></p>  <div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># this is python code</span><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"Hello Jekyll!\"</span><span class=\"p\">)</span></code></pre></div>  </div></blockquote><h2 id=\"quotes-with-headers\">Quotes with headers</h2><blockquote>  <p>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</p>  <p>Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisseid sem consectetuer libero luctus adipiscing.</p>  <h1 id=\"header-1\">Header 1</h1>  <p>This is text under Header 1`fmt.printf(“Hi Header 1”)</p>  <h2 id=\"header-2\">Header 2</h2>  <p>This is text under header 2</p>  <h3 id=\"header-3\">Header 3</h3>  <p>This is text under header 3</p>  <h4 id=\"header-4\">Header 4</h4>  <p>This is text under header 4</p>  <h5 id=\"header-5\">Header 5</h5>  <p>This is text under header 5</p></blockquote><h2 id=\"quotes-with-multiple-quotes\">Quotes with Multiple Quotes</h2><blockquote>  <p>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</p>  <p>Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisseid sem consectetuer libero luctus adipiscing.</p>  <p>Here is a quote from a book</p>  <blockquote>    <p>The secret of your future is hidden in your daily routine. - Mike Murdock</p>    <p>This is a double quoted code</p>    <h1 id=\"issue-1---please-add-new-fonts\">Issue 1 - Please add new fonts</h1>    <p>The theme looks nice, and i want to customize it. Please add fontsI think i would like to use <code class=\"language-plaintext highlighter-rouge\">Source Code Mono</code> font for the code.</p>    <p>Here lies the python –&gt;</p>    <div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># this is python code</span><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"Hi Jekyll\"</span><span class=\"p\">)</span></code></pre></div>    </div>    <p>Golang:</p>    <div class=\"language-go highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span> <span class=\"c\">// this is go code</span> <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"s\">\"Hi Jekyll!\"</span><span class=\"p\">)</span><span class=\"p\">}</span></code></pre></div>    </div>  </blockquote></blockquote>",
            "url": "https://cypherpunksamurai.github.io/Kusa-Jekyll/2017/11/01/quotes-test",
            
            
            
            "tags": ["test","jekyll"],
            
            "date_published": "2017-11-01T00:00:00+00:00",
            "date_modified": "2017-11-01T00:00:00+00:00",
            
                "author":  {
                "name": "Kusa",
                "url": null,
                "avatar": null
                }
                
            
        },
    
        {
            "id": "https://cypherpunksamurai.github.io/Kusa-Jekyll/2017/01/03/creating-navigation-menu-in-jekyll",
            "title": "Creating navigation menu in Jekyll",
            "summary": "Using data folder to build Jekyll navigation",
            "content_text": "Lorem ipsum dolor amet tousled viral art party blue bottle single-origin coffee cardigan, selvage man braid helvetica. Banh mi taxidermy meditation microdosing. Selvage cornhole YOLO, small batch vexillologist raclette VHS prism sustainable 8-bit ugh semiotics letterpress disrupt pop-up. Celiac shabby chic ugh, jianbing whatever kitsch tattooed edison bulb kogi irony etsy.Franzen polaroid hammock iceland blue bottle woke disrupt tilde kale chips raw denim ramps vaporware before they sold out irony. Narwhal vaporware offal shaman celiac kinfolk activated charcoal salvia lomo irony readymade normcore. Yr activated charcoal kombucha, man braid whatever biodiesel hella crucifix adaptogen bicycle rights small batch skateboard mixtape. Hot chicken sustainable green juice 90’s. Ennui kickstarter hella pug, meggings man bun shaman messenger bag. Chambray adaptogen kombucha pug affogato, kogi green juice distillery ugh banh mi.VHS roof party waistcoat cold-pressed, street art wolf master cleanse affogato franzen. Shaman iceland pour-over intelligentsia typewriter tilde, pitchfork copper mug. Wayfarers kickstarter adaptogen vinyl beard kombucha. Organic pinterest master cleanse, mixtape fam gentrify lo-fi kogi.Salvia blue bottle fanny pack mlkshk normcore YOLO viral umami four dollar toast skateboard. Chambray taxidermy slow-carb street art chartreuse. Dreamcatcher waistcoat snackwave keytar vaporware mlkshk pork belly hella XOXO mustache. Tattooed semiotics edison bulb, disrupt polaroid craft beer vape enamel pin bespoke flannel letterpress brooklyn subway tile copper mug. Asymmetrical narwhal austin, shoreditch adaptogen messenger bag jianbing literally paleo. Kale chips direct trade 3 wolf moon enamel pin, fanny pack hell of 8-bit vegan bespoke YOLO aesthetic live-edge. Retro succulents before they sold out whatever bushwick.Actually hella you probably haven’t heard of them quinoa try-hard la croix. Street art schlitz actually hell of pour-over air plant. Post-ironic franzen brunch mumblecore readymade. Food truck photo booth polaroid, gochujang vegan street art yr before they sold out man bun. Tilde selfies chia pitchfork everyday carry post-ironic mumblecore sartorial VHS master cleanse activated charcoal biodiesel williamsburg cronut jean shorts. Poutine helvetica keffiyeh butcher pop-up.",
            "content_html": "<p>Lorem ipsum dolor amet tousled viral art party blue bottle single-origin coffee cardigan, selvage man braid helvetica. Banh mi taxidermy meditation microdosing. Selvage cornhole YOLO, small batch vexillologist raclette VHS prism sustainable 8-bit ugh semiotics letterpress disrupt pop-up. Celiac shabby chic ugh, jianbing whatever kitsch tattooed edison bulb kogi irony etsy.</p><p>Franzen polaroid hammock iceland blue bottle woke disrupt tilde kale chips raw denim ramps vaporware before they sold out irony. Narwhal vaporware offal shaman celiac kinfolk activated charcoal salvia lomo irony readymade normcore. Yr activated charcoal kombucha, man braid whatever biodiesel hella crucifix adaptogen bicycle rights small batch skateboard mixtape. Hot chicken sustainable green juice 90’s. Ennui kickstarter hella pug, meggings man bun shaman messenger bag. Chambray adaptogen kombucha pug affogato, kogi green juice distillery ugh banh mi.</p><p>VHS roof party waistcoat cold-pressed, street art wolf master cleanse affogato franzen. Shaman iceland pour-over intelligentsia typewriter tilde, pitchfork copper mug. Wayfarers kickstarter adaptogen vinyl beard kombucha. Organic pinterest master cleanse, mixtape fam gentrify lo-fi kogi.</p><p>Salvia blue bottle fanny pack mlkshk normcore YOLO viral umami four dollar toast skateboard. Chambray taxidermy slow-carb street art chartreuse. Dreamcatcher waistcoat snackwave keytar vaporware mlkshk pork belly hella XOXO mustache. Tattooed semiotics edison bulb, disrupt polaroid craft beer vape enamel pin bespoke flannel letterpress brooklyn subway tile copper mug. Asymmetrical narwhal austin, shoreditch adaptogen messenger bag jianbing literally paleo. Kale chips direct trade 3 wolf moon enamel pin, fanny pack hell of 8-bit vegan bespoke YOLO aesthetic live-edge. Retro succulents before they sold out whatever bushwick.</p><p>Actually hella you probably haven’t heard of them quinoa try-hard la croix. Street art schlitz actually hell of pour-over air plant. Post-ironic franzen brunch mumblecore readymade. Food truck photo booth polaroid, gochujang vegan street art yr before they sold out man bun. Tilde selfies chia pitchfork everyday carry post-ironic mumblecore sartorial VHS master cleanse activated charcoal biodiesel williamsburg cronut jean shorts. Poutine helvetica keffiyeh butcher pop-up.</p>",
            "url": "https://cypherpunksamurai.github.io/Kusa-Jekyll/2017/01/03/creating-navigation-menu-in-jekyll",
            
            
            
            "tags": ["coding","jekyll"],
            
            "date_published": "2017-01-03T00:00:00+00:00",
            "date_modified": "2017-01-03T00:00:00+00:00",
            
                "author":  {
                "name": "Kusa",
                "url": null,
                "avatar": null
                }
                
            
        },
    
        {
            "id": "https://cypherpunksamurai.github.io/Kusa-Jekyll/2017/01/01/hello-jekyll",
            "title": "Hello Jekyll",
            "summary": "Hello Jekyll",
            "content_text": "Hello Jekyll: Markdown Test  Overview          Philosophy      Inline HTML      Automatic Escaping for Special Characters        Block Elements          Paragraphs and Line Breaks      Headers      Blockquotes      Lists      Code Blocks      Horizontal Rules        Span Elements          Links      Emphasis      Code      Images        Miscellaneous          Backslash Escapes      Automatic Links      Note: This document is itself written using Markdown; youcan see the source for it by adding ‘.text’ to the URL.OverviewPhilosophyMarkdown is intended to be as easy-to-read and easy-to-write as is feasible.Readability, however, is emphasized above all else. A Markdown-formatteddocument should be publishable as-is, as plain text, without lookinglike it’s been marked up with tags or formatting instructions. WhileMarkdown’s syntax has been influenced by several existing text-to-HTMLfilters – including Setext, atx, Textile, reStructuredText,Grutatext, and EtText – the single biggest source ofinspiration for Markdown’s syntax is the format of plain text email.Block ElementsParagraphs and Line BreaksA paragraph is simply one or more consecutive lines of text, separatedby one or more blank lines. (A blank line is any line that looks like ablank line – a line containing nothing but spaces or tabs is consideredblank.) Normal paragraphs should not be indented with spaces or tabs.The implication of the “one or more consecutive lines of text” rule isthat Markdown supports “hard-wrapped” text paragraphs. This differssignificantly from most other text-to-HTML formatters (including MovableType’s “Convert Line Breaks” option) which translate every line breakcharacter in a paragraph into a &lt;br /&gt; tag.When you do want to insert a &lt;br /&gt; break tag using Markdown, youend a line with two or more spaces, then type return.HeadersMarkdown supports two styles of headers, [Setext] [1] and [atx] [2].Optionally, you may “close” atx-style headers. This is purelycosmetic – you can use this if you think it looks better. Theclosing hashes don’t even need to match the number of hashesused to open the header. (The number of opening hashesdetermines the header level.)BlockquotesMarkdown uses email-style &gt; characters for blockquoting. If you’refamiliar with quoting passages of text in an email message, then youknow how to create a blockquote in Markdown. It looks best if you hardwrap the text and put a &gt; before every line:  This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.  Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisseid sem consectetuer libero luctus adipiscing.Markdown allows you to be lazy and only put the &gt; before the firstline of a hard-wrapped paragraph:  This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.  Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisseid sem consectetuer libero luctus adipiscing.Blockquotes can be nested (i.e. a blockquote-in-a-blockquote) byadding additional levels of &gt;:  This is the first level of quoting.      This is nested blockquote.    Back to the first level.Blockquotes can contain other Markdown elements, including headers, lists,and code blocks:  This is a header.      This is the first list item.    This is the second list item.    Here’s some example code:  return shell_exec(\"echo $input | $markdown_script\");  Any decent text editor should make email-style quoting easy. Forexample, with BBEdit, you can make a selection and choose IncreaseQuote Level from the Text menu.ListsMarkdown supports ordered (numbered) and unordered (bulleted) lists.Unordered lists use asterisks, pluses, and hyphens – interchangably– as list markers:  Red  Green  Blueis equivalent to:  Red  Green  Blueand:  Red  Green  BlueOrdered lists use numbers followed by periods:  Bird  McHale  ParishIt’s important to note that the actual numbers you use to mark thelist have no effect on the HTML output Markdown produces. The HTMLMarkdown produces from the above list is:If you instead wrote the list in Markdown like this:  Bird  McHale  Parishor even:  Bird  McHale  Parishyou’d get the exact same HTML output. The point is, if you want to,you can use ordinal numbers in your ordered Markdown lists, so thatthe numbers in your source match the numbers in your published HTML.But if you want to be lazy, you don’t have to.To make lists look nice, you can wrap items with hanging indents:  Lorem ipsum dolor sit amet, consectetuer adipiscing elit.Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,viverra nec, fringilla in, laoreet vitae, risus.  Donec sit amet nisl. Aliquam semper ipsum sit amet velit.Suspendisse id sem consectetuer libero luctus adipiscing.But if you want to be lazy, you don’t have to:  Lorem ipsum dolor sit amet, consectetuer adipiscing elit.Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,viverra nec, fringilla in, laoreet vitae, risus.  Donec sit amet nisl. Aliquam semper ipsum sit amet velit.Suspendisse id sem consectetuer libero luctus adipiscing.List items may consist of multiple paragraphs. Each subsequentparagraph in a list item must be indented by either 4 spacesor one tab:      This is a list item with two paragraphs. Lorem ipsum dolorsit amet, consectetuer adipiscing elit. Aliquam hendreritmi posuere lectus.    Vestibulum enim wisi, viverra nec, fringilla in, laoreetvitae, risus. Donec sit amet nisl. Aliquam semper ipsumsit amet velit.        Suspendisse id sem consectetuer libero luctus adipiscing.  It looks nice if you indent every line of the subsequentparagraphs, but here again, Markdown will allow you to belazy:      This is a list item with two paragraphs.    This is the second paragraph in the list item. You’reonly required to indent the first line. Lorem ipsum dolorsit amet, consectetuer adipiscing elit.        Another item in the same list.  To put a blockquote within a list item, the blockquote’s &gt;delimiters need to be indented:      A list item with a blockquote:          This is a blockquoteinside a list item.      To put a code block within a list item, the code block needsto be indented twice – 8 spaces or two tabs:      A list item with a code block:    &lt;code goes here&gt;      Code BlocksPre-formatted code blocks are used for writing about programming ormarkup source code. Rather than forming normal paragraphs, the linesof a code block are interpreted literally. Markdown wraps a code blockin both &lt;pre&gt; and &lt;code&gt; tags.To produce a code block in Markdown, simply indent every line of theblock by at least 4 spaces or 1 tab.This is a normal paragraph:This is a code block.Here is an example of AppleScript:tell application \"Foo\"    beepend tellA code block continues until it reaches a line that is not indented(or the end of the article).Within a code block, ampersands (&amp;) and angle brackets (&lt; and &gt;)are automatically converted into HTML entities. This makes it veryeasy to include example HTML source code using Markdown – just pasteit and indent it, and Markdown will handle the hassle of encoding theampersands and angle brackets. For example, this:&lt;div class=\"footer\"&gt;    &amp;copy; 2004 Foo Corporation&lt;/div&gt;Regular Markdown syntax is not processed within code blocks. E.g.,asterisks are just literal asterisks within a code block. This meansit’s also easy to use Markdown to write about Markdown’s own syntax.tell application \"Foo\"    beepend tellSpan ElementsLinksMarkdown supports two style of links: inline and reference.In both styles, the link text is delimited by [square brackets].To create an inline link, use a set of regular parentheses immediatelyafter the link text’s closing square bracket. Inside the parentheses,put the URL where you want the link to point, along with an optionaltitle for the link, surrounded in quotes. For example:This is an example inline link.This link has no title attribute.EmphasisMarkdown treats asterisks (*) and underscores (_) as indicators ofemphasis. Text wrapped with one * or _ will be wrapped with anHTML &lt;em&gt; tag; double *’s or _’s will be wrapped with an HTML&lt;strong&gt; tag. E.g., this input:single asteriskssingle underscoresdouble asterisksdouble underscoresCodeTo indicate a span of code, wrap it with backtick quotes (`).Unlike a pre-formatted code block, a code span indicates code within anormal paragraph. For example:Use the printf() function.",
            "content_html": "<h1 id=\"hello-jekyll-markdown-test\">Hello Jekyll: Markdown Test</h1><ul>  <li><a href=\"#overview\">Overview</a>    <ul>      <li><a href=\"#philosophy\">Philosophy</a></li>      <li><a href=\"#html\">Inline HTML</a></li>      <li><a href=\"#autoescape\">Automatic Escaping for Special Characters</a></li>    </ul>  </li>  <li><a href=\"#block\">Block Elements</a>    <ul>      <li><a href=\"#p\">Paragraphs and Line Breaks</a></li>      <li><a href=\"#header\">Headers</a></li>      <li><a href=\"#blockquote\">Blockquotes</a></li>      <li><a href=\"#list\">Lists</a></li>      <li><a href=\"#precode\">Code Blocks</a></li>      <li><a href=\"#hr\">Horizontal Rules</a></li>    </ul>  </li>  <li><a href=\"#span\">Span Elements</a>    <ul>      <li><a href=\"#link\">Links</a></li>      <li><a href=\"#em\">Emphasis</a></li>      <li><a href=\"#code\">Code</a></li>      <li><a href=\"#img\">Images</a></li>    </ul>  </li>  <li><a href=\"#misc\">Miscellaneous</a>    <ul>      <li><a href=\"#backslash\">Backslash Escapes</a></li>      <li><a href=\"#autolink\">Automatic Links</a></li>    </ul>  </li></ul><p><strong>Note:</strong> This document is itself written using Markdown; youcan <a href=\"/projects/markdown/syntax.text\">see the source for it by adding ‘.text’ to the URL</a>.</p><hr /><h2 id=\"overview\">Overview</h2><h3 id=\"philosophy\">Philosophy</h3><p>Markdown is intended to be as easy-to-read and easy-to-write as is feasible.</p><p>Readability, however, is emphasized above all else. A Markdown-formatteddocument should be publishable as-is, as plain text, without lookinglike it’s been marked up with tags or formatting instructions. WhileMarkdown’s syntax has been influenced by several existing text-to-HTMLfilters – including <a href=\"http://docutils.sourceforge.net/mirror/setext.html\">Setext</a>, <a href=\"http://www.aaronsw.com/2002/atx/\">atx</a>, <a href=\"http://textism.com/tools/textile/\">Textile</a>, <a href=\"http://docutils.sourceforge.net/rst.html\">reStructuredText</a>,<a href=\"http://www.triptico.com/software/grutatxt.html\">Grutatext</a>, and <a href=\"http://ettext.taint.org/doc/\">EtText</a> – the single biggest source ofinspiration for Markdown’s syntax is the format of plain text email.</p><h2 id=\"block-elements\">Block Elements</h2><h3 id=\"paragraphs-and-line-breaks\">Paragraphs and Line Breaks</h3><p>A paragraph is simply one or more consecutive lines of text, separatedby one or more blank lines. (A blank line is any line that looks like ablank line – a line containing nothing but spaces or tabs is consideredblank.) Normal paragraphs should not be indented with spaces or tabs.</p><p>The implication of the “one or more consecutive lines of text” rule isthat Markdown supports “hard-wrapped” text paragraphs. This differssignificantly from most other text-to-HTML formatters (including MovableType’s “Convert Line Breaks” option) which translate every line breakcharacter in a paragraph into a <code class=\"language-plaintext highlighter-rouge\">&lt;br /&gt;</code> tag.</p><p>When you <em>do</em> want to insert a <code class=\"language-plaintext highlighter-rouge\">&lt;br /&gt;</code> break tag using Markdown, youend a line with two or more spaces, then type return.</p><h3 id=\"headers\">Headers</h3><p>Markdown supports two styles of headers, [Setext] [1] and [atx] [2].</p><p>Optionally, you may “close” atx-style headers. This is purelycosmetic – you can use this if you think it looks better. Theclosing hashes don’t even need to match the number of hashesused to open the header. (The number of opening hashesdetermines the header level.)</p><h3 id=\"blockquotes\">Blockquotes</h3><p>Markdown uses email-style <code class=\"language-plaintext highlighter-rouge\">&gt;</code> characters for blockquoting. If you’refamiliar with quoting passages of text in an email message, then youknow how to create a blockquote in Markdown. It looks best if you hardwrap the text and put a <code class=\"language-plaintext highlighter-rouge\">&gt;</code> before every line:</p><blockquote>  <p>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</p>  <p>Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisseid sem consectetuer libero luctus adipiscing.</p></blockquote><p>Markdown allows you to be lazy and only put the <code class=\"language-plaintext highlighter-rouge\">&gt;</code> before the firstline of a hard-wrapped paragraph:</p><blockquote>  <p>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</p></blockquote><blockquote>  <p>Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisseid sem consectetuer libero luctus adipiscing.</p></blockquote><p>Blockquotes can be nested (i.e. a blockquote-in-a-blockquote) byadding additional levels of <code class=\"language-plaintext highlighter-rouge\">&gt;</code>:</p><blockquote>  <p>This is the first level of quoting.</p>  <blockquote>    <p>This is nested blockquote.</p>  </blockquote>  <p>Back to the first level.</p></blockquote><p>Blockquotes can contain other Markdown elements, including headers, lists,and code blocks:</p><blockquote>  <h2 id=\"this-is-a-header\">This is a header.</h2>  <ol>    <li>This is the first list item.</li>    <li>This is the second list item.</li>  </ol>  <p>Here’s some example code:</p>  <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>return shell_exec(\"echo $input | $markdown_script\");</code></pre></div>  </div></blockquote><p>Any decent text editor should make email-style quoting easy. Forexample, with BBEdit, you can make a selection and choose IncreaseQuote Level from the Text menu.</p><h3 id=\"lists\">Lists</h3><p>Markdown supports ordered (numbered) and unordered (bulleted) lists.</p><p>Unordered lists use asterisks, pluses, and hyphens – interchangably– as list markers:</p><ul>  <li>Red</li>  <li>Green</li>  <li>Blue</li></ul><p>is equivalent to:</p><ul>  <li>Red</li>  <li>Green</li>  <li>Blue</li></ul><p>and:</p><ul>  <li>Red</li>  <li>Green</li>  <li>Blue</li></ul><p>Ordered lists use numbers followed by periods:</p><ol>  <li>Bird</li>  <li>McHale</li>  <li>Parish</li></ol><p>It’s important to note that the actual numbers you use to mark thelist have no effect on the HTML output Markdown produces. The HTMLMarkdown produces from the above list is:</p><p>If you instead wrote the list in Markdown like this:</p><ol>  <li>Bird</li>  <li>McHale</li>  <li>Parish</li></ol><p>or even:</p><ol>  <li>Bird</li>  <li>McHale</li>  <li>Parish</li></ol><p>you’d get the exact same HTML output. The point is, if you want to,you can use ordinal numbers in your ordered Markdown lists, so thatthe numbers in your source match the numbers in your published HTML.But if you want to be lazy, you don’t have to.</p><p>To make lists look nice, you can wrap items with hanging indents:</p><ul>  <li>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,viverra nec, fringilla in, laoreet vitae, risus.</li>  <li>Donec sit amet nisl. Aliquam semper ipsum sit amet velit.Suspendisse id sem consectetuer libero luctus adipiscing.</li></ul><p>But if you want to be lazy, you don’t have to:</p><ul>  <li>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,viverra nec, fringilla in, laoreet vitae, risus.</li>  <li>Donec sit amet nisl. Aliquam semper ipsum sit amet velit.Suspendisse id sem consectetuer libero luctus adipiscing.</li></ul><p>List items may consist of multiple paragraphs. Each subsequentparagraph in a list item must be indented by either 4 spacesor one tab:</p><ol>  <li>    <p>This is a list item with two paragraphs. Lorem ipsum dolorsit amet, consectetuer adipiscing elit. Aliquam hendreritmi posuere lectus.</p>    <p>Vestibulum enim wisi, viverra nec, fringilla in, laoreetvitae, risus. Donec sit amet nisl. Aliquam semper ipsumsit amet velit.</p>  </li>  <li>    <p>Suspendisse id sem consectetuer libero luctus adipiscing.</p>  </li></ol><p>It looks nice if you indent every line of the subsequentparagraphs, but here again, Markdown will allow you to belazy:</p><ul>  <li>    <p>This is a list item with two paragraphs.</p>    <p>This is the second paragraph in the list item. You’reonly required to indent the first line. Lorem ipsum dolorsit amet, consectetuer adipiscing elit.</p>  </li>  <li>    <p>Another item in the same list.</p>  </li></ul><p>To put a blockquote within a list item, the blockquote’s <code class=\"language-plaintext highlighter-rouge\">&gt;</code>delimiters need to be indented:</p><ul>  <li>    <p>A list item with a blockquote:</p>    <blockquote>      <p>This is a blockquoteinside a list item.</p>    </blockquote>  </li></ul><p>To put a code block within a list item, the code block needsto be indented <em>twice</em> – 8 spaces or two tabs:</p><ul>  <li>    <p>A list item with a code block:</p>    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>&lt;code goes here&gt;</code></pre></div>    </div>  </li></ul><h3 id=\"code-blocks\">Code Blocks</h3><p>Pre-formatted code blocks are used for writing about programming ormarkup source code. Rather than forming normal paragraphs, the linesof a code block are interpreted literally. Markdown wraps a code blockin both <code class=\"language-plaintext highlighter-rouge\">&lt;pre&gt;</code> and <code class=\"language-plaintext highlighter-rouge\">&lt;code&gt;</code> tags.</p><p>To produce a code block in Markdown, simply indent every line of theblock by at least 4 spaces or 1 tab.</p><p>This is a normal paragraph:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>This is a code block.</code></pre></div></div><p>Here is an example of AppleScript:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>tell application \"Foo\"    beepend tell</code></pre></div></div><p>A code block continues until it reaches a line that is not indented(or the end of the article).</p><p>Within a code block, ampersands (<code class=\"language-plaintext highlighter-rouge\">&amp;</code>) and angle brackets (<code class=\"language-plaintext highlighter-rouge\">&lt;</code> and <code class=\"language-plaintext highlighter-rouge\">&gt;</code>)are automatically converted into HTML entities. This makes it veryeasy to include example HTML source code using Markdown – just pasteit and indent it, and Markdown will handle the hassle of encoding theampersands and angle brackets. For example, this:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>&lt;div class=\"footer\"&gt;    &amp;copy; 2004 Foo Corporation&lt;/div&gt;</code></pre></div></div><p>Regular Markdown syntax is not processed within code blocks. E.g.,asterisks are just literal asterisks within a code block. This meansit’s also easy to use Markdown to write about Markdown’s own syntax.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>tell application \"Foo\"    beepend tell</code></pre></div></div><h2 id=\"span-elements\">Span Elements</h2><h3 id=\"links\">Links</h3><p>Markdown supports two style of links: <em>inline</em> and <em>reference</em>.</p><p>In both styles, the link text is delimited by [square brackets].</p><p>To create an inline link, use a set of regular parentheses immediatelyafter the link text’s closing square bracket. Inside the parentheses,put the URL where you want the link to point, along with an <em>optional</em>title for the link, surrounded in quotes. For example:</p><p>This is <a href=\"http://example.com/\">an example</a> inline link.</p><p><a href=\"http://example.net/\">This link</a> has no title attribute.</p><h3 id=\"emphasis\">Emphasis</h3><p>Markdown treats asterisks (<code class=\"language-plaintext highlighter-rouge\">*</code>) and underscores (<code class=\"language-plaintext highlighter-rouge\">_</code>) as indicators ofemphasis. Text wrapped with one <code class=\"language-plaintext highlighter-rouge\">*</code> or <code class=\"language-plaintext highlighter-rouge\">_</code> will be wrapped with anHTML <code class=\"language-plaintext highlighter-rouge\">&lt;em&gt;</code> tag; double <code class=\"language-plaintext highlighter-rouge\">*</code>’s or <code class=\"language-plaintext highlighter-rouge\">_</code>’s will be wrapped with an HTML<code class=\"language-plaintext highlighter-rouge\">&lt;strong&gt;</code> tag. E.g., this input:</p><p><em>single asterisks</em></p><p><em>single underscores</em></p><p><strong>double asterisks</strong></p><p><strong>double underscores</strong></p><h3 id=\"code\">Code</h3><p>To indicate a span of code, wrap it with backtick quotes (<code class=\"language-plaintext highlighter-rouge\">`</code>).Unlike a pre-formatted code block, a code span indicates code within anormal paragraph. For example:</p><p>Use the <code class=\"language-plaintext highlighter-rouge\">printf()</code> function.</p>",
            "url": "https://cypherpunksamurai.github.io/Kusa-Jekyll/2017/01/01/hello-jekyll",
            
            
            
            "tags": ["jekyll","coding"],
            
            "date_published": "2017-01-01T00:00:00+00:00",
            "date_modified": "2017-01-01T00:00:00+00:00",
            
                "author":  {
                "name": "Kusa",
                "url": null,
                "avatar": null
                }
                
            
        },
    
        {
            "id": "https://cypherpunksamurai.github.io/Kusa-Jekyll/2016/12/11/structured-data-markup-validation-and-testing-tools",
            "title": "Structured Data markup validation and testing tools",
            "summary": "Schema.org structured data helps you to highlight specific information for search engines and to improve the way your page displays in SERPs",
            "content_text": "Lorem ipsum dolor amet tousled viral art party blue bottle single-origin coffee cardigan, selvage man braid helvetica. Banh mi taxidermy meditation microdosing. Selvage cornhole YOLO, small batch vexillologist raclette VHS prism sustainable 8-bit ugh semiotics letterpress disrupt pop-up. Celiac shabby chic ugh, jianbing whatever kitsch tattooed edison bulb kogi irony etsy.Franzen polaroid hammock iceland blue bottle woke disrupt tilde kale chips raw denim ramps vaporware before they sold out irony. Narwhal vaporware offal shaman celiac kinfolk activated charcoal salvia lomo irony readymade normcore. Yr activated charcoal kombucha, man braid whatever biodiesel hella crucifix adaptogen bicycle rights small batch skateboard mixtape. Hot chicken sustainable green juice 90’s. Ennui kickstarter hella pug, meggings man bun shaman messenger bag. Chambray adaptogen kombucha pug affogato, kogi green juice distillery ugh banh mi.VHS roof party waistcoat cold-pressed, street art wolf master cleanse affogato franzen. Shaman iceland pour-over intelligentsia typewriter tilde, pitchfork copper mug. Wayfarers kickstarter adaptogen vinyl beard kombucha. Organic pinterest master cleanse, mixtape fam gentrify lo-fi kogi.Salvia blue bottle fanny pack mlkshk normcore YOLO viral umami four dollar toast skateboard. Chambray taxidermy slow-carb street art chartreuse. Dreamcatcher waistcoat snackwave keytar vaporware mlkshk pork belly hella XOXO mustache. Tattooed semiotics edison bulb, disrupt polaroid craft beer vape enamel pin bespoke flannel letterpress brooklyn subway tile copper mug. Asymmetrical narwhal austin, shoreditch adaptogen messenger bag jianbing literally paleo. Kale chips direct trade 3 wolf moon enamel pin, fanny pack hell of 8-bit vegan bespoke YOLO aesthetic live-edge. Retro succulents before they sold out whatever bushwick.Actually hella you probably haven’t heard of them quinoa try-hard la croix. Street art schlitz actually hell of pour-over air plant. Post-ironic franzen brunch mumblecore readymade. Food truck photo booth polaroid, gochujang vegan street art yr before they sold out man bun. Tilde selfies chia pitchfork everyday carry post-ironic mumblecore sartorial VHS master cleanse activated charcoal biodiesel williamsburg cronut jean shorts. Poutine helvetica keffiyeh butcher pop-up.",
            "content_html": "<p>Lorem ipsum dolor amet tousled viral art party blue bottle single-origin coffee cardigan, selvage man braid helvetica. Banh mi taxidermy meditation microdosing. Selvage cornhole YOLO, small batch vexillologist raclette VHS prism sustainable 8-bit ugh semiotics letterpress disrupt pop-up. Celiac shabby chic ugh, jianbing whatever kitsch tattooed edison bulb kogi irony etsy.</p><p>Franzen polaroid hammock iceland blue bottle woke disrupt tilde kale chips raw denim ramps vaporware before they sold out irony. Narwhal vaporware offal shaman celiac kinfolk activated charcoal salvia lomo irony readymade normcore. Yr activated charcoal kombucha, man braid whatever biodiesel hella crucifix adaptogen bicycle rights small batch skateboard mixtape. Hot chicken sustainable green juice 90’s. Ennui kickstarter hella pug, meggings man bun shaman messenger bag. Chambray adaptogen kombucha pug affogato, kogi green juice distillery ugh banh mi.</p><p>VHS roof party waistcoat cold-pressed, street art wolf master cleanse affogato franzen. Shaman iceland pour-over intelligentsia typewriter tilde, pitchfork copper mug. Wayfarers kickstarter adaptogen vinyl beard kombucha. Organic pinterest master cleanse, mixtape fam gentrify lo-fi kogi.</p><p>Salvia blue bottle fanny pack mlkshk normcore YOLO viral umami four dollar toast skateboard. Chambray taxidermy slow-carb street art chartreuse. Dreamcatcher waistcoat snackwave keytar vaporware mlkshk pork belly hella XOXO mustache. Tattooed semiotics edison bulb, disrupt polaroid craft beer vape enamel pin bespoke flannel letterpress brooklyn subway tile copper mug. Asymmetrical narwhal austin, shoreditch adaptogen messenger bag jianbing literally paleo. Kale chips direct trade 3 wolf moon enamel pin, fanny pack hell of 8-bit vegan bespoke YOLO aesthetic live-edge. Retro succulents before they sold out whatever bushwick.</p><p>Actually hella you probably haven’t heard of them quinoa try-hard la croix. Street art schlitz actually hell of pour-over air plant. Post-ironic franzen brunch mumblecore readymade. Food truck photo booth polaroid, gochujang vegan street art yr before they sold out man bun. Tilde selfies chia pitchfork everyday carry post-ironic mumblecore sartorial VHS master cleanse activated charcoal biodiesel williamsburg cronut jean shorts. Poutine helvetica keffiyeh butcher pop-up.</p>",
            "url": "https://cypherpunksamurai.github.io/Kusa-Jekyll/2016/12/11/structured-data-markup-validation-and-testing-tools",
            
            
            
            
            
            "date_published": "2016-12-11T00:00:00+00:00",
            "date_modified": "2016-12-11T00:00:00+00:00",
            
                "author":  {
                "name": "Kusa",
                "url": null,
                "avatar": null
                }
                
            
        },
    
        {
            "id": "https://cypherpunksamurai.github.io/Kusa-Jekyll/2016/11/27/top-monospaced-fonts-for-coding",
            "title": "Top monospaced fonts for coding",
            "summary": "Take a look at the fonts in this post that can make your text editor or terminal emulator look little bit nicer",
            "content_text": "Lorem ipsum dolor amet tousled viral art party blue bottle single-origin coffee cardigan, selvage man braid helvetica. Banh mi taxidermy meditation microdosing. Selvage cornhole YOLO, small batch vexillologist raclette VHS prism sustainable 8-bit ugh semiotics letterpress disrupt pop-up. Celiac shabby chic ugh, jianbing whatever kitsch tattooed edison bulb kogi irony etsy.Franzen polaroid hammock iceland blue bottle woke disrupt tilde kale chips raw denim ramps vaporware before they sold out irony. Narwhal vaporware offal shaman celiac kinfolk activated charcoal salvia lomo irony readymade normcore. Yr activated charcoal kombucha, man braid whatever biodiesel hella crucifix adaptogen bicycle rights small batch skateboard mixtape. Hot chicken sustainable green juice 90’s. Ennui kickstarter hella pug, meggings man bun shaman messenger bag. Chambray adaptogen kombucha pug affogato, kogi green juice distillery ugh banh mi.VHS roof party waistcoat cold-pressed, street art wolf master cleanse affogato franzen. Shaman iceland pour-over intelligentsia typewriter tilde, pitchfork copper mug. Wayfarers kickstarter adaptogen vinyl beard kombucha. Organic pinterest master cleanse, mixtape fam gentrify lo-fi kogi.Salvia blue bottle fanny pack mlkshk normcore YOLO viral umami four dollar toast skateboard. Chambray taxidermy slow-carb street art chartreuse. Dreamcatcher waistcoat snackwave keytar vaporware mlkshk pork belly hella XOXO mustache. Tattooed semiotics edison bulb, disrupt polaroid craft beer vape enamel pin bespoke flannel letterpress brooklyn subway tile copper mug. Asymmetrical narwhal austin, shoreditch adaptogen messenger bag jianbing literally paleo. Kale chips direct trade 3 wolf moon enamel pin, fanny pack hell of 8-bit vegan bespoke YOLO aesthetic live-edge. Retro succulents before they sold out whatever bushwick.Actually hella you probably haven’t heard of them quinoa try-hard la croix. Street art schlitz actually hell of pour-over air plant. Post-ironic franzen brunch mumblecore readymade. Food truck photo booth polaroid, gochujang vegan street art yr before they sold out man bun. Tilde selfies chia pitchfork everyday carry post-ironic mumblecore sartorial VHS master cleanse activated charcoal biodiesel williamsburg cronut jean shorts. Poutine helvetica keffiyeh butcher pop-up.",
            "content_html": "<p>Lorem ipsum dolor amet tousled viral art party blue bottle single-origin coffee cardigan, selvage man braid helvetica. Banh mi taxidermy meditation microdosing. Selvage cornhole YOLO, small batch vexillologist raclette VHS prism sustainable 8-bit ugh semiotics letterpress disrupt pop-up. Celiac shabby chic ugh, jianbing whatever kitsch tattooed edison bulb kogi irony etsy.</p><p>Franzen polaroid hammock iceland blue bottle woke disrupt tilde kale chips raw denim ramps vaporware before they sold out irony. Narwhal vaporware offal shaman celiac kinfolk activated charcoal salvia lomo irony readymade normcore. Yr activated charcoal kombucha, man braid whatever biodiesel hella crucifix adaptogen bicycle rights small batch skateboard mixtape. Hot chicken sustainable green juice 90’s. Ennui kickstarter hella pug, meggings man bun shaman messenger bag. Chambray adaptogen kombucha pug affogato, kogi green juice distillery ugh banh mi.</p><p>VHS roof party waistcoat cold-pressed, street art wolf master cleanse affogato franzen. Shaman iceland pour-over intelligentsia typewriter tilde, pitchfork copper mug. Wayfarers kickstarter adaptogen vinyl beard kombucha. Organic pinterest master cleanse, mixtape fam gentrify lo-fi kogi.</p><p>Salvia blue bottle fanny pack mlkshk normcore YOLO viral umami four dollar toast skateboard. Chambray taxidermy slow-carb street art chartreuse. Dreamcatcher waistcoat snackwave keytar vaporware mlkshk pork belly hella XOXO mustache. Tattooed semiotics edison bulb, disrupt polaroid craft beer vape enamel pin bespoke flannel letterpress brooklyn subway tile copper mug. Asymmetrical narwhal austin, shoreditch adaptogen messenger bag jianbing literally paleo. Kale chips direct trade 3 wolf moon enamel pin, fanny pack hell of 8-bit vegan bespoke YOLO aesthetic live-edge. Retro succulents before they sold out whatever bushwick.</p><p>Actually hella you probably haven’t heard of them quinoa try-hard la croix. Street art schlitz actually hell of pour-over air plant. Post-ironic franzen brunch mumblecore readymade. Food truck photo booth polaroid, gochujang vegan street art yr before they sold out man bun. Tilde selfies chia pitchfork everyday carry post-ironic mumblecore sartorial VHS master cleanse activated charcoal biodiesel williamsburg cronut jean shorts. Poutine helvetica keffiyeh butcher pop-up.</p>",
            "url": "https://cypherpunksamurai.github.io/Kusa-Jekyll/2016/11/27/top-monospaced-fonts-for-coding",
            
            
            
            
            
            "date_published": "2016-11-27T00:00:00+00:00",
            "date_modified": "2016-11-27T00:00:00+00:00",
            
                "author":  {
                "name": "Kusa",
                "url": null,
                "avatar": null
                }
                
            
        },
    
        {
            "id": "https://cypherpunksamurai.github.io/Kusa-Jekyll/2016/02/02/code-highlight-with-linenum",
            "title": "Code Highlight With Line Numbers",
            "summary": "Jekyll Code Highlight with line numbers",
            "content_text": "Code Highlight With Line NumbersHere is test code# This is python codeprint(\"Hello Jekyll!\")# Basica = 1b = 1c = a + bfor i in range(0,9):    print(c + i)",
            "content_html": "<h1 id=\"code-highlight-with-line-numbers\">Code Highlight With Line Numbers</h1><p>Here is test code</p><figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"c1\"># This is python code</span><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"Hello Jekyll!\"</span><span class=\"p\">)</span><span class=\"c1\"># Basic</span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">a</span> <span class=\"o\">+</span> <span class=\"n\">b</span><span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">9</span><span class=\"p\">):</span>    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">c</span> <span class=\"o\">+</span> <span class=\"n\">i</span><span class=\"p\">)</span></code></pre></figure>",
            "url": "https://cypherpunksamurai.github.io/Kusa-Jekyll/2016/02/02/code-highlight-with-linenum",
            
            
            
            "tags": ["test","jekyll"],
            
            "date_published": "2016-02-02T00:00:00+00:00",
            "date_modified": "2016-02-02T00:00:00+00:00",
            
                "author":  {
                "name": "Kusa",
                "url": null,
                "avatar": null
                }
                
            
        },
    
        {
            "id": "https://cypherpunksamurai.github.io/Kusa-Jekyll/2016/01/02/code-highlighting",
            "title": "Code Highlighting",
            "summary": "Code Highlighting Test",
            "content_text": "Bash#!/bin/bashcd $ROOT_DIRDOT_FILES=\"lastpass weechat ssh Xauthority\"for dotfile in $DOT_FILES; do conform_link \"$DATA_DIR/$dotfile\" \".$dotfile\"; done# TODO: refactor with suffix variables (or common cron values)case \"$PLATFORM\" in    linux)        #conform_link \"$CONF_DIR/shell/zshenv\" \".zshenv\"        crontab -l &gt; $ROOT_DIR/tmp/crontab-conflict-arch        cd $ROOT_DIR/$CONF_DIR/cron        if [[ \"$(diff ~/tmp/crontab-conflict-arch crontab-current-arch)\" == \"\"            ]];            then # no difference with current backup                logger \"$LOG_PREFIX: crontab live settings match stored \"\\                    \"settings; no restore required\"                rm ~/tmp/crontab-conflict-arch            else # current crontab settings in file do not match live settings                crontab $ROOT_DIR/$CONF_DIR/cron/crontab-current-arch                logger \"$LOG_PREFIX: crontab stored settings conflict with \"\\                    \"live settings; stored settings restored. \"\\                    \"Previous settings recorded in ~/tmp/crontab-conflict-arch.\"        fi    ;;C#define UNICODE#include &lt;windows.h&gt;int main(int argc, char **argv) {  int speed = 0, speed1 = 0, speed2 = 0; // 1-20  printf(\"Set Mouse Speed by Maverick\\n\");  SystemParametersInfo(SPI_GETMOUSESPEED, 0, &amp;speed, 0);  printf(\"Current speed: %2d\\n\", speed);  if (argc == 1) return 0;  if (argc &gt;= 2) sscanf(argv[1], \"%d\", &amp;speed1);  if (argc &gt;= 3) sscanf(argv[2], \"%d\", &amp;speed2);  if (argc == 2) // set speed to first value    speed = speed1;  else if (speed == speed1 || speed == speed2) // alternate    speed = speed1 + speed2 - speed;  else    speed = speed1;  // start with first value  SystemParametersInfo(SPI_SETMOUSESPEED, 0,  speed, 0);  SystemParametersInfo(SPI_GETMOUSESPEED, 0, &amp;speed, 0);  printf(\"New speed:     %2d\\n\", speed);  return 0;}CSS/* CSS Comment */#some-id .some-class {  float: left;  width: 100px;}Gopackage mainimport \"fmt\"func main() {    fmt.Println(\"Hello, 世界\")}Haskell{-# LANGUAGE OverloadedStrings #-}module Main where--import Prelude hiding (id)--import Control.Category (id)import Control.Arrow ((&gt;&gt;&gt;), (***), arr)import Control.Monad (forM_)-- import Data.Monoid (mempty, mconcat)-- import System.FilePathimport Hakyllmain :: IO ()main = hakyll $ do    route   \"css/*\" $ setExtension \"css\"    compile \"css/*\" $ byExtension (error \"Not a (S)CSS file\")        [ (\".css\",  compressCssCompiler)        , (\".scss\", sass)        ]    route   \"js/**\" idRoute    compile \"js/**\" copyFileCompiler    route   \"img/*\" idRoute    compile \"img/*\" copyFileCompiler    compile \"templates/*\" templateCompiler    forM_ [\"test.md\", \"index.md\"] $ \\page -&gt; do        route   page $ setExtension \"html\"        compile page $ pageCompiler            &gt;&gt;&gt; applyTemplateCompiler \"templates/default.html\"            &gt;&gt;&gt; relativizeUrlsCompilersass :: Compiler Resource Stringsass = getResourceString &gt;&gt;&gt; unixFilter \"sass\" [\"-s\", \"--scss\"]                         &gt;&gt;&gt; arr compressCssHTML&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"&gt;&lt;html&gt;  &lt;head&gt;    &lt;title&gt;A Tiny Page&lt;/title&gt;    &lt;!-- Valid HTML Comment --&gt;    &lt;style type=\"text/css\"&gt;    &lt;!-- Invalid HTML Comment --&gt;      /* Inline CSS Comment */      p {        font-size: 15pt;        color: #000;        float: right;      }    &lt;/style&gt;  &lt;/head&gt;  &lt;body bgcolor=\"#FFFFFF\" text=\"#000000\" link=\"#0000CC\"&gt;    &lt;h1&gt;Heading 1&lt;/h1&gt;    &lt;h2&gt;Heading 2&lt;/h2&gt;    &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&lt;/p&gt;    &lt;!--  Valid HTML Comment --&gt;    &lt;script language=\"javascript\" type=\"text/javascript\"&gt;      function changeHeight(h) {        var tds = document.getElementsByTagName(\"td\");        for(var i = 0; i &lt; tds.length; i++) {          tds[i].setAttribute(\"height\", h + \"px\");      }}    &lt;/script&gt;  &lt;/body&gt;&lt;/html&gt;Javaimport java.util.Map;import java.util.TreeSet;public class GetEnv {  /**   * let's test generics   * @param args the command line arguments   */  public static void main(String[] args) {    // get a map of environment variables    Map&lt;String, String&gt; env = System.getenv();    // build a sorted set out of the keys and iterate    for(String k: new TreeSet&lt;String&gt;(env.keySet())) {      System.out.printf(\"%s = %s\\n\", k, env.get(k));    }  }    }JavaScript// Inline Commentvar undefined,    xui,    window     = this,    string     = new String('string'),    document   = window.document,    simpleExpr = /^#?([\\w-]+)$/;/**  * Block Comment */ function changeHeight (h) {  var tds = document.getElementsByTagName(\"td\");  for (var i = 0; i &lt; tds.length; i++) {    tds[i].setAttribute(\"height\", h + \"px\");  }}JSON{  \"employees\": [{    \"firstName\": \"John\",     \"lastName\": \"Doe\"  }]}Objective-C#import \"Cocoa1AppDelegate.h\"@implementation Cocoa1AppDelegate@synthesize window,siteUrl,pageContents;- (void)applicationDidFinishLaunching:(NSNotification *)aNotification {    // Insert code here to initialize your application    model = [[Cocoa1Model alloc] init];}- (IBAction)getSiteContents:(id)sender {    [model setPageUrl:[siteUrl stringValue]];    NSString* reply = [model getUrlAsString];    NSLog(@\"pageSrc: %@\", reply);    [pageContents setString:reply];    [[[pageContents textStorage] mutableString] appendString:reply];}@endPerl#!perl -w# Time-stamp: &lt;2002/04/06, 13:12:13 (EST), maverick, csvformat.pl&gt;# Two pass CSV file to table formatter$delim = $#ARGV &gt;= 1 ? $ARGV[1] : ',';print STDERR \"Split pattern: $delim\\n\";# first passopen F, \"&lt;$ARGV[0]\" or die;while(&lt;F&gt;){  chomp;  $i = 0;  map { $max[$_-&gt;[1]] = $_-&gt;[0] if $_-&gt;[0] &gt; ($max[$_-&gt;[1]] || 0) }    (map {[length $_, $i++]} split($delim));}close F;print STDERR 'Field width:   ', join(', ', @max), \"\\n\";print STDERR join(' ', map {'-' x $_} @max);# second passopen F, \"&lt;$ARGV[0]\" or die;while(&lt;F&gt;){  chomp;  $i = 0;  map { printf(\"%-$max[$_-&gt;[1]]s \", $_-&gt;[0]) }    (map {[$_, $i++]} split($delim));  print \"\\n\";}close F;PHP&lt;?phprequire_once($GLOBALS['g_campsiteDir']. \"/$ADMIN_DIR/country/common.php\");require_once($GLOBALS['g_campsiteDir']. \"/classes/SimplePager.php\");camp_load_translation_strings(\"api\");$f_country_language_selected = camp_session_get('f_language_selected', '');$f_country_offset = camp_session_get('f_country_offset', 0);if (empty($f_country_language_selected)) {    $f_country_language_selected = null;}$ItemsPerPage = 20;$languages = Language::GetLanguages(null, null, null, array(), array(), true);$numCountries = Country::GetNumCountries($f_country_language_selected);$pager = new SimplePager($numCountries, $ItemsPerPage, \"index.php?\");$crumbs = array();$crumbs[] = array(getGS(\"Configure\"), \"\");$crumbs[] = array(getGS(\"Countries\"), \"\");echo camp_html_breadcrumbs($crumbs);?&gt;&lt;?php if ($g_user-&gt;hasPermission(\"ManageCountries\")) { ?&gt;&lt;table BORDER=\"0\" CELLSPACING=\"0\" CELLPADDING=\"1\"&gt;    &lt;tr&gt;        &lt;td&gt;&lt;a href=\"add.php\"&gt;&lt;?php putGS(\"Add new\"); ?&gt;&lt;/a&gt;&lt;/td&gt;    &lt;/tr&gt;&lt;/table&gt;&lt;?php } ?&gt;Python# Inline Python Commentclass ExitNotifyThread(Thread):    \"\"\"    Block-Level Python Comment    \"\"\"    def run(self):        global exitthreads, profiledir        self.threadid = thread.get_ident()        try:            if not profiledir: # normal case                Thread.run(self)            else:                try:                    import cProfile as profile                except ImportError:                    import profile                prof = profile.Profile()                try:                    prof = prof.runctx(\"Thread.run(self)\", globals(), locals())                except SystemExit:                    pass                prof.dump_stats( \\                            profiledir + \"/\" + str(self.threadid) + \"_\" + \\                            self.getName() + \".prof\")        except:            self.setExitCause('EXCEPTION')            if sys:                self.setExitException(sys.exc_info()[1])                tb = traceback.format_exc()                self.setExitStackTrace(tb)        else:            self.setExitCause('NORMAL')        if not hasattr(self, 'exitmessage'):            self.setExitMessage(None)        if exitthreads:            exitthreads.put(self, True)    def setExitCause(self, cause):        self.exitcause = cause    def getExitCause(self):        \"\"\"Returns the cause of the exit, one of:        'EXCEPTION' -- the thread aborted because of an exception        'NORMAL' -- normal termination.\"\"\"        return self.exitcause    def setExitException(self, exc):        self.exitexception = exc    def getExitException(self):        \"\"\"If getExitCause() is 'EXCEPTION', holds the value from        sys.exc_info()[1] for this exception.\"\"\"        return self.exitexception    def setExitStackTrace(self, st):        self.exitstacktrace = st    def getExitStackTrace(self):        \"\"\"If getExitCause() is 'EXCEPTION', returns a string representing        the stack trace for this exception.\"\"\"        return self.exitstacktrace    def setExitMessage(self, msg):        \"\"\"Sets the exit message to be fetched by a subsequent call to        getExitMessage.  This message may be any object or type except        None.\"\"\"        self.exitmessage = msg    def getExitMessage(self):        \"\"\"For any exit cause, returns the message previously set by        a call to setExitMessage(), or None if there was no such message        set.\"\"\"        return self.exitmessageRubydesc \"Edit a post (defaults to most recent)\"task :edit_post, :title do |t, args|  args.with_defaults(:title =&gt; false)  posts = Dir.glob(\"#{source_dir}/#{posts_dir}/*.*\")  post = (args.title) ? post = posts.keep_if {|post| post =~ /#{args.title}/}.last : posts.last  if post    puts \"Opening #{post} with #{editor}...\"    system \"#{ENV['EDITOR']} #{post} &amp;\"  else    puts \"No posts were found with \\\"#{args.title}\\\" in the title.\"  endendSCSS@import \"grids\";$blue: blue;a.myAnchor {    color: $blue;    &amp;:hover {        text-decoration: underline;    }    &amp;:visited {        color: purple;    }}.error-input {  @extend .input;  border: 4px solid #e74c3c;}%input-style {    font-size: 14px;}input {    @extend %input-style;    color: black;}@mixin media($queryString){    @media #{$queryString} {      @content;    }}@function getColumnWidth($width, $columns,$margin){    @return ($width / $columns) - ($margin * 2);}$settings: (    maxWidth: 800px,    columns: 12,    margin: 15px,    breakpoints: (        xs: \"(max-width : 480px)\",        sm: \"(max-width : 768px) and (min-width: 481px)\",        md: \"(max-width : 1024px)  and (min-width: 769px)\",        lg: \"(min-width : 1025px)\"    ));SQLSELECT column_name, column_name FROM table_name;XML&lt;employees&gt;    &lt;employee&gt;        &lt;firstName&gt;John&lt;/firstName&gt; &lt;lastName&gt;Doe&lt;/lastName&gt;    &lt;/employee&gt;&lt;/employees&gt;",
            "content_html": "<h1 id=\"bash\">Bash</h1><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\">#!/bin/bash</span><span class=\"nb\">cd</span> <span class=\"nv\">$ROOT_DIR</span><span class=\"nv\">DOT_FILES</span><span class=\"o\">=</span><span class=\"s2\">\"lastpass weechat ssh Xauthority\"</span><span class=\"k\">for </span>dotfile <span class=\"k\">in</span> <span class=\"nv\">$DOT_FILES</span><span class=\"p\">;</span> <span class=\"k\">do </span>conform_link <span class=\"s2\">\"</span><span class=\"nv\">$DATA_DIR</span><span class=\"s2\">/</span><span class=\"nv\">$dotfile</span><span class=\"s2\">\"</span> <span class=\"s2\">\".</span><span class=\"nv\">$dotfile</span><span class=\"s2\">\"</span><span class=\"p\">;</span> <span class=\"k\">done</span><span class=\"c\"># TODO: refactor with suffix variables (or common cron values)</span><span class=\"k\">case</span> <span class=\"s2\">\"</span><span class=\"nv\">$PLATFORM</span><span class=\"s2\">\"</span> <span class=\"k\">in    </span>linux<span class=\"p\">)</span>        <span class=\"c\">#conform_link \"$CONF_DIR/shell/zshenv\" \".zshenv\"</span>        crontab <span class=\"nt\">-l</span> <span class=\"o\">&gt;</span> <span class=\"nv\">$ROOT_DIR</span>/tmp/crontab-conflict-arch        <span class=\"nb\">cd</span> <span class=\"nv\">$ROOT_DIR</span>/<span class=\"nv\">$CONF_DIR</span>/cron        <span class=\"k\">if</span> <span class=\"o\">[[</span> <span class=\"s2\">\"</span><span class=\"si\">$(</span>diff ~/tmp/crontab-conflict-arch crontab-current-arch<span class=\"si\">)</span><span class=\"s2\">\"</span> <span class=\"o\">==</span> <span class=\"s2\">\"\"</span>            <span class=\"o\">]]</span><span class=\"p\">;</span>            <span class=\"k\">then</span> <span class=\"c\"># no difference with current backup</span>                logger <span class=\"s2\">\"</span><span class=\"nv\">$LOG_PREFIX</span><span class=\"s2\">: crontab live settings match stored \"</span><span class=\"se\">\\</span>                    <span class=\"s2\">\"settings; no restore required\"</span>                <span class=\"nb\">rm</span> ~/tmp/crontab-conflict-arch            <span class=\"k\">else</span> <span class=\"c\"># current crontab settings in file do not match live settings</span>                crontab <span class=\"nv\">$ROOT_DIR</span>/<span class=\"nv\">$CONF_DIR</span>/cron/crontab-current-arch                logger <span class=\"s2\">\"</span><span class=\"nv\">$LOG_PREFIX</span><span class=\"s2\">: crontab stored settings conflict with \"</span><span class=\"se\">\\</span>                    <span class=\"s2\">\"live settings; stored settings restored. \"</span><span class=\"se\">\\</span>                    <span class=\"s2\">\"Previous settings recorded in ~/tmp/crontab-conflict-arch.\"</span>        <span class=\"k\">fi</span>    <span class=\"p\">;;</span></code></pre></div></div><h1 id=\"c\">C</h1><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\">#define UNICODE#include &lt;windows.h&gt;</span><span class=\"kt\">int</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">argc</span><span class=\"p\">,</span> <span class=\"kt\">char</span> <span class=\"o\">**</span><span class=\"n\">argv</span><span class=\"p\">)</span> <span class=\"p\">{</span>  <span class=\"kt\">int</span> <span class=\"n\">speed</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">speed1</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">speed2</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"c1\">// 1-20</span>  <span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Set Mouse Speed by Maverick</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>  <span class=\"n\">SystemParametersInfo</span><span class=\"p\">(</span><span class=\"n\">SPI_GETMOUSESPEED</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">speed</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">);</span>  <span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Current speed: %2d</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span> <span class=\"n\">speed</span><span class=\"p\">);</span>  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">argc</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">;</span>  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">argc</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"n\">sscanf</span><span class=\"p\">(</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"s\">\"%d\"</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">speed1</span><span class=\"p\">);</span>  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">argc</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"n\">sscanf</span><span class=\"p\">(</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"s\">\"%d\"</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">speed2</span><span class=\"p\">);</span>  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">argc</span> <span class=\"o\">==</span> <span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"c1\">// set speed to first value</span>    <span class=\"n\">speed</span> <span class=\"o\">=</span> <span class=\"n\">speed1</span><span class=\"p\">;</span>  <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">speed</span> <span class=\"o\">==</span> <span class=\"n\">speed1</span> <span class=\"o\">||</span> <span class=\"n\">speed</span> <span class=\"o\">==</span> <span class=\"n\">speed2</span><span class=\"p\">)</span> <span class=\"c1\">// alternate</span>    <span class=\"n\">speed</span> <span class=\"o\">=</span> <span class=\"n\">speed1</span> <span class=\"o\">+</span> <span class=\"n\">speed2</span> <span class=\"o\">-</span> <span class=\"n\">speed</span><span class=\"p\">;</span>  <span class=\"k\">else</span>    <span class=\"n\">speed</span> <span class=\"o\">=</span> <span class=\"n\">speed1</span><span class=\"p\">;</span>  <span class=\"c1\">// start with first value</span>  <span class=\"n\">SystemParametersInfo</span><span class=\"p\">(</span><span class=\"n\">SPI_SETMOUSESPEED</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span>  <span class=\"n\">speed</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">);</span>  <span class=\"n\">SystemParametersInfo</span><span class=\"p\">(</span><span class=\"n\">SPI_GETMOUSESPEED</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">speed</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">);</span>  <span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"New speed:     %2d</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span> <span class=\"n\">speed</span><span class=\"p\">);</span>  <span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"p\">}</span></code></pre></div></div><h1 id=\"css\">CSS</h1><div class=\"language-css highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\">/* CSS Comment */</span><span class=\"nf\">#some-id</span> <span class=\"nc\">.some-class</span> <span class=\"p\">{</span>  <span class=\"nl\">float</span><span class=\"p\">:</span> <span class=\"nb\">left</span><span class=\"p\">;</span>  <span class=\"nl\">width</span><span class=\"p\">:</span> <span class=\"m\">100px</span><span class=\"p\">;</span><span class=\"p\">}</span></code></pre></div></div><h1 id=\"go\">Go</h1><div class=\"language-go highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">package</span> <span class=\"n\">main</span><span class=\"k\">import</span> <span class=\"s\">\"fmt\"</span><span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>    <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"s\">\"Hello, 世界\"</span><span class=\"p\">)</span><span class=\"p\">}</span></code></pre></div></div><h1 id=\"haskell\">Haskell</h1><div class=\"language-haskell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\">{-# LANGUAGE OverloadedStrings #-}</span><span class=\"kr\">module</span> <span class=\"nn\">Main</span> <span class=\"kr\">where</span><span class=\"c1\">--import Prelude hiding (id)</span><span class=\"c1\">--import Control.Category (id)</span><span class=\"kr\">import</span> <span class=\"nn\">Control.Arrow</span> <span class=\"p\">((</span><span class=\"o\">&gt;&gt;&gt;</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"o\">***</span><span class=\"p\">),</span> <span class=\"nf\">arr</span><span class=\"p\">)</span><span class=\"kr\">import</span> <span class=\"nn\">Control.Monad</span> <span class=\"p\">(</span><span class=\"nf\">forM_</span><span class=\"p\">)</span><span class=\"c1\">-- import Data.Monoid (mempty, mconcat)</span><span class=\"c1\">-- import System.FilePath</span><span class=\"kr\">import</span> <span class=\"nn\">Hakyll</span><span class=\"n\">main</span> <span class=\"o\">::</span> <span class=\"kt\">IO</span> <span class=\"nb\">()</span><span class=\"n\">main</span> <span class=\"o\">=</span> <span class=\"n\">hakyll</span> <span class=\"o\">$</span> <span class=\"kr\">do</span>    <span class=\"n\">route</span>   <span class=\"s\">\"css/*\"</span> <span class=\"o\">$</span> <span class=\"n\">setExtension</span> <span class=\"s\">\"css\"</span>    <span class=\"n\">compile</span> <span class=\"s\">\"css/*\"</span> <span class=\"o\">$</span> <span class=\"n\">byExtension</span> <span class=\"p\">(</span><span class=\"n\">error</span> <span class=\"s\">\"Not a (S)CSS file\"</span><span class=\"p\">)</span>        <span class=\"p\">[</span> <span class=\"p\">(</span><span class=\"s\">\".css\"</span><span class=\"p\">,</span>  <span class=\"n\">compressCssCompiler</span><span class=\"p\">)</span>        <span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s\">\".scss\"</span><span class=\"p\">,</span> <span class=\"n\">sass</span><span class=\"p\">)</span>        <span class=\"p\">]</span>    <span class=\"n\">route</span>   <span class=\"s\">\"js/**\"</span> <span class=\"n\">idRoute</span>    <span class=\"n\">compile</span> <span class=\"s\">\"js/**\"</span> <span class=\"n\">copyFileCompiler</span>    <span class=\"n\">route</span>   <span class=\"s\">\"img/*\"</span> <span class=\"n\">idRoute</span>    <span class=\"n\">compile</span> <span class=\"s\">\"img/*\"</span> <span class=\"n\">copyFileCompiler</span>    <span class=\"n\">compile</span> <span class=\"s\">\"templates/*\"</span> <span class=\"n\">templateCompiler</span>    <span class=\"n\">forM_</span> <span class=\"p\">[</span><span class=\"s\">\"test.md\"</span><span class=\"p\">,</span> <span class=\"s\">\"index.md\"</span><span class=\"p\">]</span> <span class=\"o\">$</span> <span class=\"nf\">\\</span><span class=\"n\">page</span> <span class=\"o\">-&gt;</span> <span class=\"kr\">do</span>        <span class=\"n\">route</span>   <span class=\"n\">page</span> <span class=\"o\">$</span> <span class=\"n\">setExtension</span> <span class=\"s\">\"html\"</span>        <span class=\"n\">compile</span> <span class=\"n\">page</span> <span class=\"o\">$</span> <span class=\"n\">pageCompiler</span>            <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">applyTemplateCompiler</span> <span class=\"s\">\"templates/default.html\"</span>            <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">relativizeUrlsCompiler</span><span class=\"n\">sass</span> <span class=\"o\">::</span> <span class=\"kt\">Compiler</span> <span class=\"kt\">Resource</span> <span class=\"kt\">String</span><span class=\"n\">sass</span> <span class=\"o\">=</span> <span class=\"n\">getResourceString</span> <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">unixFilter</span> <span class=\"s\">\"sass\"</span> <span class=\"p\">[</span><span class=\"s\">\"-s\"</span><span class=\"p\">,</span> <span class=\"s\">\"--scss\"</span><span class=\"p\">]</span>                         <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">arr</span> <span class=\"n\">compressCss</span></code></pre></div></div><h1 id=\"html\">HTML</h1><div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\">&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"&gt;</span><span class=\"nt\">&lt;html&gt;</span>  <span class=\"nt\">&lt;head&gt;</span>    <span class=\"nt\">&lt;title&gt;</span>A Tiny Page<span class=\"nt\">&lt;/title&gt;</span>    <span class=\"c\">&lt;!-- Valid HTML Comment --&gt;</span>    <span class=\"nt\">&lt;style </span><span class=\"na\">type=</span><span class=\"s\">\"text/css\"</span><span class=\"nt\">&gt;</span>    <span class=\"o\">&lt;!</span><span class=\"nt\">--</span> <span class=\"nt\">Invalid</span> <span class=\"nt\">HTML</span> <span class=\"nt\">Comment</span> <span class=\"nt\">--</span><span class=\"o\">&gt;</span>      <span class=\"c\">/* Inline CSS Comment */</span>      <span class=\"nt\">p</span> <span class=\"p\">{</span>        <span class=\"nl\">font-size</span><span class=\"p\">:</span> <span class=\"m\">15pt</span><span class=\"p\">;</span>        <span class=\"nl\">color</span><span class=\"p\">:</span> <span class=\"m\">#000</span><span class=\"p\">;</span>        <span class=\"nl\">float</span><span class=\"p\">:</span> <span class=\"nb\">right</span><span class=\"p\">;</span>      <span class=\"p\">}</span>    <span class=\"nt\">&lt;/style&gt;</span>  <span class=\"nt\">&lt;/head&gt;</span>  <span class=\"nt\">&lt;body</span> <span class=\"na\">bgcolor=</span><span class=\"s\">\"#FFFFFF\"</span> <span class=\"na\">text=</span><span class=\"s\">\"#000000\"</span> <span class=\"na\">link=</span><span class=\"s\">\"#0000CC\"</span><span class=\"nt\">&gt;</span>    <span class=\"nt\">&lt;h1&gt;</span>Heading 1<span class=\"nt\">&lt;/h1&gt;</span>    <span class=\"nt\">&lt;h2&gt;</span>Heading 2<span class=\"nt\">&lt;/h2&gt;</span>    <span class=\"nt\">&lt;p&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.<span class=\"nt\">&lt;/p&gt;</span>    <span class=\"c\">&lt;!--  Valid HTML Comment --&gt;</span>    <span class=\"nt\">&lt;script </span><span class=\"na\">language=</span><span class=\"s\">\"javascript\"</span> <span class=\"na\">type=</span><span class=\"s\">\"text/javascript\"</span><span class=\"nt\">&gt;</span>      <span class=\"kd\">function</span> <span class=\"nx\">changeHeight</span><span class=\"p\">(</span><span class=\"nx\">h</span><span class=\"p\">)</span> <span class=\"p\">{</span>        <span class=\"kd\">var</span> <span class=\"nx\">tds</span> <span class=\"o\">=</span> <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">getElementsByTagName</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">td</span><span class=\"dl\">\"</span><span class=\"p\">);</span>        <span class=\"k\">for</span><span class=\"p\">(</span><span class=\"kd\">var</span> <span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"nx\">i</span> <span class=\"o\">&lt;</span> <span class=\"nx\">tds</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"p\">;</span> <span class=\"nx\">i</span><span class=\"o\">++</span><span class=\"p\">)</span> <span class=\"p\">{</span>          <span class=\"nx\">tds</span><span class=\"p\">[</span><span class=\"nx\">i</span><span class=\"p\">].</span><span class=\"nx\">setAttribute</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">height</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"nx\">h</span> <span class=\"o\">+</span> <span class=\"dl\">\"</span><span class=\"s2\">px</span><span class=\"dl\">\"</span><span class=\"p\">);</span>      <span class=\"p\">}}</span>    <span class=\"nt\">&lt;/script&gt;</span>  <span class=\"nt\">&lt;/body&gt;</span><span class=\"nt\">&lt;/html&gt;</span></code></pre></div></div><h1 id=\"java\">Java</h1><div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">import</span> <span class=\"nn\">java.util.Map</span><span class=\"o\">;</span><span class=\"kn\">import</span> <span class=\"nn\">java.util.TreeSet</span><span class=\"o\">;</span><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">GetEnv</span> <span class=\"o\">{</span>  <span class=\"cm\">/**   * let's test generics   * @param args the command line arguments   */</span>  <span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"kt\">void</span> <span class=\"nf\">main</span><span class=\"o\">(</span><span class=\"nc\">String</span><span class=\"o\">[]</span> <span class=\"n\">args</span><span class=\"o\">)</span> <span class=\"o\">{</span>    <span class=\"c1\">// get a map of environment variables</span>    <span class=\"nc\">Map</span><span class=\"o\">&lt;</span><span class=\"nc\">String</span><span class=\"o\">,</span> <span class=\"nc\">String</span><span class=\"o\">&gt;</span> <span class=\"n\">env</span> <span class=\"o\">=</span> <span class=\"nc\">System</span><span class=\"o\">.</span><span class=\"na\">getenv</span><span class=\"o\">();</span>    <span class=\"c1\">// build a sorted set out of the keys and iterate</span>    <span class=\"k\">for</span><span class=\"o\">(</span><span class=\"nc\">String</span> <span class=\"nl\">k:</span> <span class=\"k\">new</span> <span class=\"nc\">TreeSet</span><span class=\"o\">&lt;</span><span class=\"nc\">String</span><span class=\"o\">&gt;(</span><span class=\"n\">env</span><span class=\"o\">.</span><span class=\"na\">keySet</span><span class=\"o\">()))</span> <span class=\"o\">{</span>      <span class=\"nc\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">printf</span><span class=\"o\">(</span><span class=\"s\">\"%s = %s\\n\"</span><span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"na\">get</span><span class=\"o\">(</span><span class=\"n\">k</span><span class=\"o\">));</span>    <span class=\"o\">}</span>  <span class=\"o\">}</span>    <span class=\"o\">}</span></code></pre></div></div><h1 id=\"javascript\">JavaScript</h1><div class=\"language-javascript highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\">// Inline Comment</span><span class=\"kd\">var</span> <span class=\"kc\">undefined</span><span class=\"p\">,</span>    <span class=\"nx\">xui</span><span class=\"p\">,</span>    <span class=\"nb\">window</span>     <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">,</span>    <span class=\"nx\">string</span>     <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nb\">String</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">string</span><span class=\"dl\">'</span><span class=\"p\">),</span>    <span class=\"nb\">document</span>   <span class=\"o\">=</span> <span class=\"nb\">window</span><span class=\"p\">.</span><span class=\"nb\">document</span><span class=\"p\">,</span>    <span class=\"nx\">simpleExpr</span> <span class=\"o\">=</span> <span class=\"sr\">/^#</span><span class=\"se\">?([\\w</span><span class=\"sr\">-</span><span class=\"se\">]</span><span class=\"sr\">+</span><span class=\"se\">)</span><span class=\"sr\">$/</span><span class=\"p\">;</span><span class=\"cm\">/**  * Block Comment */</span> <span class=\"kd\">function</span> <span class=\"nx\">changeHeight</span> <span class=\"p\">(</span><span class=\"nx\">h</span><span class=\"p\">)</span> <span class=\"p\">{</span>  <span class=\"kd\">var</span> <span class=\"nx\">tds</span> <span class=\"o\">=</span> <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">getElementsByTagName</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">td</span><span class=\"dl\">\"</span><span class=\"p\">);</span>  <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kd\">var</span> <span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"nx\">i</span> <span class=\"o\">&lt;</span> <span class=\"nx\">tds</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"p\">;</span> <span class=\"nx\">i</span><span class=\"o\">++</span><span class=\"p\">)</span> <span class=\"p\">{</span>    <span class=\"nx\">tds</span><span class=\"p\">[</span><span class=\"nx\">i</span><span class=\"p\">].</span><span class=\"nx\">setAttribute</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">height</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"nx\">h</span> <span class=\"o\">+</span> <span class=\"dl\">\"</span><span class=\"s2\">px</span><span class=\"dl\">\"</span><span class=\"p\">);</span>  <span class=\"p\">}</span><span class=\"p\">}</span></code></pre></div></div><h1 id=\"json\">JSON</h1><div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">  </span><span class=\"nl\">\"employees\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[{</span><span class=\"w\">    </span><span class=\"nl\">\"firstName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"John\"</span><span class=\"p\">,</span><span class=\"w\">     </span><span class=\"nl\">\"lastName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Doe\"</span><span class=\"w\">  </span><span class=\"p\">}]</span><span class=\"w\"></span><span class=\"p\">}</span><span class=\"w\"></span></code></pre></div></div><h1 id=\"objective-c\">Objective-C</h1><div class=\"language-objectivec highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\">#import \"Cocoa1AppDelegate.h\"</span><span class=\"k\">@implementation</span> <span class=\"nc\">Cocoa1AppDelegate</span><span class=\"k\">@synthesize</span> <span class=\"n\">window</span><span class=\"p\">,</span><span class=\"n\">siteUrl</span><span class=\"p\">,</span><span class=\"n\">pageContents</span><span class=\"p\">;</span><span class=\"k\">-</span> <span class=\"p\">(</span><span class=\"kt\">void</span><span class=\"p\">)</span><span class=\"nf\">applicationDidFinishLaunching</span><span class=\"p\">:(</span><span class=\"n\">NSNotification</span> <span class=\"o\">*</span><span class=\"p\">)</span><span class=\"nv\">aNotification</span> <span class=\"p\">{</span>    <span class=\"c1\">// Insert code here to initialize your application</span>    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"n\">Cocoa1Model</span> <span class=\"nf\">alloc</span><span class=\"p\">]</span> <span class=\"nf\">init</span><span class=\"p\">];</span><span class=\"p\">}</span><span class=\"k\">-</span> <span class=\"p\">(</span><span class=\"n\">IBAction</span><span class=\"p\">)</span><span class=\"nf\">getSiteContents</span><span class=\"p\">:(</span><span class=\"n\">id</span><span class=\"p\">)</span><span class=\"nv\">sender</span> <span class=\"p\">{</span>    <span class=\"p\">[</span><span class=\"n\">model</span> <span class=\"nf\">setPageUrl</span><span class=\"p\">:[</span><span class=\"n\">siteUrl</span> <span class=\"nf\">stringValue</span><span class=\"p\">]];</span>    <span class=\"n\">NSString</span><span class=\"o\">*</span> <span class=\"n\">reply</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">model</span> <span class=\"nf\">getUrlAsString</span><span class=\"p\">];</span>    <span class=\"n\">NSLog</span><span class=\"p\">(</span><span class=\"s\">@\"pageSrc: %@\"</span><span class=\"p\">,</span> <span class=\"n\">reply</span><span class=\"p\">);</span>    <span class=\"p\">[</span><span class=\"n\">pageContents</span> <span class=\"nf\">setString</span><span class=\"p\">:</span><span class=\"n\">reply</span><span class=\"p\">];</span>    <span class=\"p\">[[[</span><span class=\"n\">pageContents</span> <span class=\"nf\">textStorage</span><span class=\"p\">]</span> <span class=\"nf\">mutableString</span><span class=\"p\">]</span> <span class=\"nf\">appendString</span><span class=\"p\">:</span><span class=\"n\">reply</span><span class=\"p\">];</span><span class=\"p\">}</span><span class=\"k\">@end</span></code></pre></div></div><h1 id=\"perl\">Perl</h1><div class=\"language-perl highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\">#!perl -w</span><span class=\"c1\"># Time-stamp: &lt;2002/04/06, 13:12:13 (EST), maverick, csvformat.pl&gt;</span><span class=\"c1\"># Two pass CSV file to table formatter</span><span class=\"nv\">$delim</span> <span class=\"o\">=</span> <span class=\"nv\">$#ARGV</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">1</span> <span class=\"p\">?</span> <span class=\"nv\">$ARGV</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"p\">:</span> <span class=\"p\">'</span><span class=\"s1\">,</span><span class=\"p\">';</span><span class=\"k\">print</span> <span class=\"bp\">STDERR</span> <span class=\"p\">\"</span><span class=\"s2\">Split pattern: </span><span class=\"si\">$delim</span><span class=\"se\">\\n</span><span class=\"p\">\";</span><span class=\"c1\"># first pass</span><span class=\"nb\">open</span> <span class=\"nv\">F</span><span class=\"p\">,</span> <span class=\"p\">\"</span><span class=\"s2\">&lt;</span><span class=\"si\">$ARGV</span><span class=\"s2\">[0]</span><span class=\"p\">\"</span> <span class=\"ow\">or</span> <span class=\"nb\">die</span><span class=\"p\">;</span><span class=\"k\">while</span><span class=\"p\">(</span><span class=\"o\">&lt;</span><span class=\"nv\">F</span><span class=\"o\">&gt;</span><span class=\"p\">)</span><span class=\"p\">{</span>  <span class=\"nb\">chomp</span><span class=\"p\">;</span>  <span class=\"nv\">$i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>  <span class=\"nb\">map</span> <span class=\"p\">{</span> <span class=\"nv\">$max</span><span class=\"p\">[</span><span class=\"vg\">$_</span><span class=\"o\">-&gt;</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"vg\">$_</span><span class=\"o\">-&gt;</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"k\">if</span> <span class=\"vg\">$_</span><span class=\"o\">-&gt;</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"p\">(</span><span class=\"nv\">$max</span><span class=\"p\">[</span><span class=\"vg\">$_</span><span class=\"o\">-&gt;</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]]</span> <span class=\"o\">||</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"p\">}</span>    <span class=\"p\">(</span><span class=\"nb\">map</span> <span class=\"p\">{[</span><span class=\"nb\">length</span> <span class=\"vg\">$_</span><span class=\"p\">,</span> <span class=\"nv\">$i</span><span class=\"o\">++</span><span class=\"p\">]}</span> <span class=\"nb\">split</span><span class=\"p\">(</span><span class=\"nv\">$delim</span><span class=\"p\">));</span><span class=\"p\">}</span><span class=\"nb\">close</span> <span class=\"nv\">F</span><span class=\"p\">;</span><span class=\"k\">print</span> <span class=\"bp\">STDERR</span> <span class=\"p\">'</span><span class=\"s1\">Field width:   </span><span class=\"p\">',</span> <span class=\"nb\">join</span><span class=\"p\">('</span><span class=\"s1\">, </span><span class=\"p\">',</span> <span class=\"nv\">@max</span><span class=\"p\">),</span> <span class=\"p\">\"</span><span class=\"se\">\\n</span><span class=\"p\">\";</span><span class=\"k\">print</span> <span class=\"bp\">STDERR</span> <span class=\"nb\">join</span><span class=\"p\">('</span><span class=\"s1\"> </span><span class=\"p\">',</span> <span class=\"nb\">map</span> <span class=\"p\">{'</span><span class=\"s1\">-</span><span class=\"p\">'</span> <span class=\"nv\">x</span> <span class=\"vg\">$_</span><span class=\"p\">}</span> <span class=\"nv\">@max</span><span class=\"p\">);</span><span class=\"c1\"># second pass</span><span class=\"nb\">open</span> <span class=\"nv\">F</span><span class=\"p\">,</span> <span class=\"p\">\"</span><span class=\"s2\">&lt;</span><span class=\"si\">$ARGV</span><span class=\"s2\">[0]</span><span class=\"p\">\"</span> <span class=\"ow\">or</span> <span class=\"nb\">die</span><span class=\"p\">;</span><span class=\"k\">while</span><span class=\"p\">(</span><span class=\"o\">&lt;</span><span class=\"nv\">F</span><span class=\"o\">&gt;</span><span class=\"p\">)</span><span class=\"p\">{</span>  <span class=\"nb\">chomp</span><span class=\"p\">;</span>  <span class=\"nv\">$i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>  <span class=\"nb\">map</span> <span class=\"p\">{</span> <span class=\"nb\">printf</span><span class=\"p\">(\"</span><span class=\"s2\">%-</span><span class=\"si\">$max</span><span class=\"s2\">[</span><span class=\"si\">$_</span><span class=\"s2\">-&gt;[1]]s </span><span class=\"p\">\",</span> <span class=\"vg\">$_</span><span class=\"o\">-&gt;</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span> <span class=\"p\">}</span>    <span class=\"p\">(</span><span class=\"nb\">map</span> <span class=\"p\">{[</span><span class=\"vg\">$_</span><span class=\"p\">,</span> <span class=\"nv\">$i</span><span class=\"o\">++</span><span class=\"p\">]}</span> <span class=\"nb\">split</span><span class=\"p\">(</span><span class=\"nv\">$delim</span><span class=\"p\">));</span>  <span class=\"k\">print</span> <span class=\"p\">\"</span><span class=\"se\">\\n</span><span class=\"p\">\";</span><span class=\"p\">}</span><span class=\"nb\">close</span> <span class=\"nv\">F</span><span class=\"p\">;</span></code></pre></div></div><h1 id=\"php\">PHP</h1><div class=\"language-php highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\">&lt;?php</span><span class=\"k\">require_once</span><span class=\"p\">(</span><span class=\"nv\">$GLOBALS</span><span class=\"p\">[</span><span class=\"s1\">'g_campsiteDir'</span><span class=\"p\">]</span><span class=\"mf\">.</span> <span class=\"s2\">\"/</span><span class=\"nv\">$ADMIN_DIR</span><span class=\"s2\">/country/common.php\"</span><span class=\"p\">);</span><span class=\"k\">require_once</span><span class=\"p\">(</span><span class=\"nv\">$GLOBALS</span><span class=\"p\">[</span><span class=\"s1\">'g_campsiteDir'</span><span class=\"p\">]</span><span class=\"mf\">.</span> <span class=\"s2\">\"/classes/SimplePager.php\"</span><span class=\"p\">);</span><span class=\"nf\">camp_load_translation_strings</span><span class=\"p\">(</span><span class=\"s2\">\"api\"</span><span class=\"p\">);</span><span class=\"nv\">$f_country_language_selected</span> <span class=\"o\">=</span> <span class=\"nf\">camp_session_get</span><span class=\"p\">(</span><span class=\"s1\">'f_language_selected'</span><span class=\"p\">,</span> <span class=\"s1\">''</span><span class=\"p\">);</span><span class=\"nv\">$f_country_offset</span> <span class=\"o\">=</span> <span class=\"nf\">camp_session_get</span><span class=\"p\">(</span><span class=\"s1\">'f_country_offset'</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">);</span><span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nb\">empty</span><span class=\"p\">(</span><span class=\"nv\">$f_country_language_selected</span><span class=\"p\">))</span> <span class=\"p\">{</span>    <span class=\"nv\">$f_country_language_selected</span> <span class=\"o\">=</span> <span class=\"kc\">null</span><span class=\"p\">;</span><span class=\"p\">}</span><span class=\"nv\">$ItemsPerPage</span> <span class=\"o\">=</span> <span class=\"mi\">20</span><span class=\"p\">;</span><span class=\"nv\">$languages</span> <span class=\"o\">=</span> <span class=\"nc\">Language</span><span class=\"o\">::</span><span class=\"nf\">GetLanguages</span><span class=\"p\">(</span><span class=\"kc\">null</span><span class=\"p\">,</span> <span class=\"kc\">null</span><span class=\"p\">,</span> <span class=\"kc\">null</span><span class=\"p\">,</span> <span class=\"k\">array</span><span class=\"p\">(),</span> <span class=\"k\">array</span><span class=\"p\">(),</span> <span class=\"kc\">true</span><span class=\"p\">);</span><span class=\"nv\">$numCountries</span> <span class=\"o\">=</span> <span class=\"nc\">Country</span><span class=\"o\">::</span><span class=\"nf\">GetNumCountries</span><span class=\"p\">(</span><span class=\"nv\">$f_country_language_selected</span><span class=\"p\">);</span><span class=\"nv\">$pager</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">SimplePager</span><span class=\"p\">(</span><span class=\"nv\">$numCountries</span><span class=\"p\">,</span> <span class=\"nv\">$ItemsPerPage</span><span class=\"p\">,</span> <span class=\"s2\">\"index.php?\"</span><span class=\"p\">);</span><span class=\"nv\">$crumbs</span> <span class=\"o\">=</span> <span class=\"k\">array</span><span class=\"p\">();</span><span class=\"nv\">$crumbs</span><span class=\"p\">[]</span> <span class=\"o\">=</span> <span class=\"k\">array</span><span class=\"p\">(</span><span class=\"nf\">getGS</span><span class=\"p\">(</span><span class=\"s2\">\"Configure\"</span><span class=\"p\">),</span> <span class=\"s2\">\"\"</span><span class=\"p\">);</span><span class=\"nv\">$crumbs</span><span class=\"p\">[]</span> <span class=\"o\">=</span> <span class=\"k\">array</span><span class=\"p\">(</span><span class=\"nf\">getGS</span><span class=\"p\">(</span><span class=\"s2\">\"Countries\"</span><span class=\"p\">),</span> <span class=\"s2\">\"\"</span><span class=\"p\">);</span><span class=\"k\">echo</span> <span class=\"nf\">camp_html_breadcrumbs</span><span class=\"p\">(</span><span class=\"nv\">$crumbs</span><span class=\"p\">);</span><span class=\"cp\">?&gt;</span><span class=\"cp\">&lt;?php</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nv\">$g_user</span><span class=\"o\">-&gt;</span><span class=\"nf\">hasPermission</span><span class=\"p\">(</span><span class=\"s2\">\"ManageCountries\"</span><span class=\"p\">))</span> <span class=\"p\">{</span> <span class=\"cp\">?&gt;</span><span class=\"nt\">&lt;table</span> <span class=\"na\">BORDER=</span><span class=\"s\">\"0\"</span> <span class=\"na\">CELLSPACING=</span><span class=\"s\">\"0\"</span> <span class=\"na\">CELLPADDING=</span><span class=\"s\">\"1\"</span><span class=\"nt\">&gt;</span>    <span class=\"nt\">&lt;tr&gt;</span>        <span class=\"nt\">&lt;td&gt;&lt;a</span> <span class=\"na\">href=</span><span class=\"s\">\"add.php\"</span><span class=\"nt\">&gt;</span><span class=\"cp\">&lt;?php</span> <span class=\"nf\">putGS</span><span class=\"p\">(</span><span class=\"s2\">\"Add new\"</span><span class=\"p\">);</span> <span class=\"cp\">?&gt;</span><span class=\"nt\">&lt;/a&gt;&lt;/td&gt;</span>    <span class=\"nt\">&lt;/tr&gt;</span><span class=\"nt\">&lt;/table&gt;</span><span class=\"cp\">&lt;?php</span> <span class=\"p\">}</span> <span class=\"cp\">?&gt;</span></code></pre></div></div><h1 id=\"python\">Python</h1><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># Inline Python Comment</span><span class=\"k\">class</span> <span class=\"nc\">ExitNotifyThread</span><span class=\"p\">(</span><span class=\"n\">Thread</span><span class=\"p\">):</span>    <span class=\"s\">\"\"\"    Block-Level Python Comment    \"\"\"</span>    <span class=\"k\">def</span> <span class=\"nf\">run</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>        <span class=\"k\">global</span> <span class=\"n\">exitthreads</span><span class=\"p\">,</span> <span class=\"n\">profiledir</span>        <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">threadid</span> <span class=\"o\">=</span> <span class=\"n\">thread</span><span class=\"p\">.</span><span class=\"n\">get_ident</span><span class=\"p\">()</span>        <span class=\"k\">try</span><span class=\"p\">:</span>            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">profiledir</span><span class=\"p\">:</span> <span class=\"c1\"># normal case</span>                <span class=\"n\">Thread</span><span class=\"p\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>            <span class=\"k\">else</span><span class=\"p\">:</span>                <span class=\"k\">try</span><span class=\"p\">:</span>                    <span class=\"kn\">import</span> <span class=\"nn\">cProfile</span> <span class=\"k\">as</span> <span class=\"n\">profile</span>                <span class=\"k\">except</span> <span class=\"nb\">ImportError</span><span class=\"p\">:</span>                    <span class=\"kn\">import</span> <span class=\"nn\">profile</span>                <span class=\"n\">prof</span> <span class=\"o\">=</span> <span class=\"n\">profile</span><span class=\"p\">.</span><span class=\"n\">Profile</span><span class=\"p\">()</span>                <span class=\"k\">try</span><span class=\"p\">:</span>                    <span class=\"n\">prof</span> <span class=\"o\">=</span> <span class=\"n\">prof</span><span class=\"p\">.</span><span class=\"n\">runctx</span><span class=\"p\">(</span><span class=\"s\">\"Thread.run(self)\"</span><span class=\"p\">,</span> <span class=\"nb\">globals</span><span class=\"p\">(),</span> <span class=\"nb\">locals</span><span class=\"p\">())</span>                <span class=\"k\">except</span> <span class=\"nb\">SystemExit</span><span class=\"p\">:</span>                    <span class=\"k\">pass</span>                <span class=\"n\">prof</span><span class=\"p\">.</span><span class=\"n\">dump_stats</span><span class=\"p\">(</span> \\                            <span class=\"n\">profiledir</span> <span class=\"o\">+</span> <span class=\"s\">\"/\"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">threadid</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s\">\"_\"</span> <span class=\"o\">+</span> \\                            <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">getName</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"s\">\".prof\"</span><span class=\"p\">)</span>        <span class=\"k\">except</span><span class=\"p\">:</span>            <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">setExitCause</span><span class=\"p\">(</span><span class=\"s\">'EXCEPTION'</span><span class=\"p\">)</span>            <span class=\"k\">if</span> <span class=\"n\">sys</span><span class=\"p\">:</span>                <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">setExitException</span><span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"p\">.</span><span class=\"n\">exc_info</span><span class=\"p\">()[</span><span class=\"mi\">1</span><span class=\"p\">])</span>                <span class=\"n\">tb</span> <span class=\"o\">=</span> <span class=\"n\">traceback</span><span class=\"p\">.</span><span class=\"n\">format_exc</span><span class=\"p\">()</span>                <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">setExitStackTrace</span><span class=\"p\">(</span><span class=\"n\">tb</span><span class=\"p\">)</span>        <span class=\"k\">else</span><span class=\"p\">:</span>            <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">setExitCause</span><span class=\"p\">(</span><span class=\"s\">'NORMAL'</span><span class=\"p\">)</span>        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s\">'exitmessage'</span><span class=\"p\">):</span>            <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">setExitMessage</span><span class=\"p\">(</span><span class=\"bp\">None</span><span class=\"p\">)</span>        <span class=\"k\">if</span> <span class=\"n\">exitthreads</span><span class=\"p\">:</span>            <span class=\"n\">exitthreads</span><span class=\"p\">.</span><span class=\"n\">put</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"bp\">True</span><span class=\"p\">)</span>    <span class=\"k\">def</span> <span class=\"nf\">setExitCause</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">cause</span><span class=\"p\">):</span>        <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">exitcause</span> <span class=\"o\">=</span> <span class=\"n\">cause</span>    <span class=\"k\">def</span> <span class=\"nf\">getExitCause</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>        <span class=\"s\">\"\"\"Returns the cause of the exit, one of:        'EXCEPTION' -- the thread aborted because of an exception        'NORMAL' -- normal termination.\"\"\"</span>        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">exitcause</span>    <span class=\"k\">def</span> <span class=\"nf\">setExitException</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">exc</span><span class=\"p\">):</span>        <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">exitexception</span> <span class=\"o\">=</span> <span class=\"n\">exc</span>    <span class=\"k\">def</span> <span class=\"nf\">getExitException</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>        <span class=\"s\">\"\"\"If getExitCause() is 'EXCEPTION', holds the value from        sys.exc_info()[1] for this exception.\"\"\"</span>        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">exitexception</span>    <span class=\"k\">def</span> <span class=\"nf\">setExitStackTrace</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">st</span><span class=\"p\">):</span>        <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">exitstacktrace</span> <span class=\"o\">=</span> <span class=\"n\">st</span>    <span class=\"k\">def</span> <span class=\"nf\">getExitStackTrace</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>        <span class=\"s\">\"\"\"If getExitCause() is 'EXCEPTION', returns a string representing        the stack trace for this exception.\"\"\"</span>        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">exitstacktrace</span>    <span class=\"k\">def</span> <span class=\"nf\">setExitMessage</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">msg</span><span class=\"p\">):</span>        <span class=\"s\">\"\"\"Sets the exit message to be fetched by a subsequent call to        getExitMessage.  This message may be any object or type except        None.\"\"\"</span>        <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">exitmessage</span> <span class=\"o\">=</span> <span class=\"n\">msg</span>    <span class=\"k\">def</span> <span class=\"nf\">getExitMessage</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>        <span class=\"s\">\"\"\"For any exit cause, returns the message previously set by        a call to setExitMessage(), or None if there was no such message        set.\"\"\"</span>        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">exitmessage</span></code></pre></div></div><h1 id=\"ruby\">Ruby</h1><div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">desc</span> <span class=\"s2\">\"Edit a post (defaults to most recent)\"</span><span class=\"n\">task</span> <span class=\"ss\">:edit_post</span><span class=\"p\">,</span> <span class=\"ss\">:title</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"o\">|</span>  <span class=\"n\">args</span><span class=\"p\">.</span><span class=\"nf\">with_defaults</span><span class=\"p\">(</span><span class=\"ss\">:title</span> <span class=\"o\">=&gt;</span> <span class=\"kp\">false</span><span class=\"p\">)</span>  <span class=\"n\">posts</span> <span class=\"o\">=</span> <span class=\"no\">Dir</span><span class=\"p\">.</span><span class=\"nf\">glob</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"si\">#{</span><span class=\"n\">source_dir</span><span class=\"si\">}</span><span class=\"s2\">/</span><span class=\"si\">#{</span><span class=\"n\">posts_dir</span><span class=\"si\">}</span><span class=\"s2\">/*.*\"</span><span class=\"p\">)</span>  <span class=\"n\">post</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">.</span><span class=\"nf\">title</span><span class=\"p\">)</span> <span class=\"p\">?</span> <span class=\"n\">post</span> <span class=\"o\">=</span> <span class=\"n\">posts</span><span class=\"p\">.</span><span class=\"nf\">keep_if</span> <span class=\"p\">{</span><span class=\"o\">|</span><span class=\"n\">post</span><span class=\"o\">|</span> <span class=\"n\">post</span> <span class=\"o\">=~</span> <span class=\"sr\">/</span><span class=\"si\">#{</span><span class=\"n\">args</span><span class=\"p\">.</span><span class=\"nf\">title</span><span class=\"si\">}</span><span class=\"sr\">/</span><span class=\"p\">}.</span><span class=\"nf\">last</span> <span class=\"p\">:</span> <span class=\"n\">posts</span><span class=\"p\">.</span><span class=\"nf\">last</span>  <span class=\"k\">if</span> <span class=\"n\">post</span>    <span class=\"nb\">puts</span> <span class=\"s2\">\"Opening </span><span class=\"si\">#{</span><span class=\"n\">post</span><span class=\"si\">}</span><span class=\"s2\"> with </span><span class=\"si\">#{</span><span class=\"n\">editor</span><span class=\"si\">}</span><span class=\"s2\">...\"</span>    <span class=\"nb\">system</span> <span class=\"s2\">\"</span><span class=\"si\">#{</span><span class=\"no\">ENV</span><span class=\"p\">[</span><span class=\"s1\">'EDITOR'</span><span class=\"p\">]</span><span class=\"si\">}</span><span class=\"s2\"> </span><span class=\"si\">#{</span><span class=\"n\">post</span><span class=\"si\">}</span><span class=\"s2\"> &amp;\"</span>  <span class=\"k\">else</span>    <span class=\"nb\">puts</span> <span class=\"s2\">\"No posts were found with </span><span class=\"se\">\\\"</span><span class=\"si\">#{</span><span class=\"n\">args</span><span class=\"p\">.</span><span class=\"nf\">title</span><span class=\"si\">}</span><span class=\"se\">\\\"</span><span class=\"s2\"> in the title.\"</span>  <span class=\"k\">end</span><span class=\"k\">end</span></code></pre></div></div><h1 id=\"scss\">SCSS</h1><div class=\"language-scss highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">@import</span> <span class=\"s2\">\"grids\"</span><span class=\"p\">;</span><span class=\"nv\">$blue</span><span class=\"p\">:</span> <span class=\"no\">blue</span><span class=\"p\">;</span><span class=\"nt\">a</span><span class=\"nc\">.myAnchor</span> <span class=\"p\">{</span>    <span class=\"nl\">color</span><span class=\"p\">:</span> <span class=\"nv\">$blue</span><span class=\"p\">;</span>    <span class=\"k\">&amp;</span><span class=\"nd\">:hover</span> <span class=\"p\">{</span>        <span class=\"nl\">text-decoration</span><span class=\"p\">:</span> <span class=\"nb\">underline</span><span class=\"p\">;</span>    <span class=\"p\">}</span>    <span class=\"k\">&amp;</span><span class=\"nd\">:visited</span> <span class=\"p\">{</span>        <span class=\"nl\">color</span><span class=\"p\">:</span> <span class=\"no\">purple</span><span class=\"p\">;</span>    <span class=\"p\">}</span><span class=\"p\">}</span><span class=\"nc\">.error-input</span> <span class=\"p\">{</span>  <span class=\"k\">@extend</span> <span class=\"nc\">.input</span><span class=\"p\">;</span>  <span class=\"nl\">border</span><span class=\"p\">:</span> <span class=\"m\">4px</span> <span class=\"nb\">solid</span> <span class=\"mh\">#e74c3c</span><span class=\"p\">;</span><span class=\"p\">}</span><span class=\"nv\">%input-style</span> <span class=\"p\">{</span>    <span class=\"nl\">font-size</span><span class=\"p\">:</span> <span class=\"m\">14px</span><span class=\"p\">;</span><span class=\"p\">}</span><span class=\"nt\">input</span> <span class=\"p\">{</span>    <span class=\"k\">@extend</span> <span class=\"nv\">%input-style</span><span class=\"p\">;</span>    <span class=\"nl\">color</span><span class=\"p\">:</span> <span class=\"no\">black</span><span class=\"p\">;</span><span class=\"p\">}</span><span class=\"k\">@mixin</span> <span class=\"nf\">media</span><span class=\"p\">(</span><span class=\"nv\">$queryString</span><span class=\"p\">){</span>    <span class=\"k\">@media</span> <span class=\"si\">#{</span><span class=\"nv\">$queryString</span><span class=\"si\">}</span> <span class=\"p\">{</span>      <span class=\"k\">@content</span><span class=\"p\">;</span>    <span class=\"p\">}</span><span class=\"p\">}</span><span class=\"k\">@function</span> <span class=\"nf\">getColumnWidth</span><span class=\"p\">(</span><span class=\"nv\">$width</span><span class=\"o\">,</span> <span class=\"nv\">$columns</span><span class=\"o\">,</span><span class=\"nv\">$margin</span><span class=\"p\">){</span>    <span class=\"k\">@return</span> <span class=\"p\">(</span><span class=\"nv\">$width</span> <span class=\"o\">/</span> <span class=\"nv\">$columns</span><span class=\"p\">)</span> <span class=\"nf\">-</span> <span class=\"p\">(</span><span class=\"nv\">$margin</span> <span class=\"o\">*</span> <span class=\"m\">2</span><span class=\"p\">);</span><span class=\"p\">}</span><span class=\"nv\">$settings</span><span class=\"p\">:</span> <span class=\"p\">(</span>    <span class=\"n\">maxWidth</span><span class=\"o\">:</span> <span class=\"m\">800px</span><span class=\"o\">,</span>    <span class=\"n\">columns</span><span class=\"o\">:</span> <span class=\"m\">12</span><span class=\"o\">,</span>    <span class=\"n\">margin</span><span class=\"o\">:</span> <span class=\"m\">15px</span><span class=\"o\">,</span>    <span class=\"n\">breakpoints</span><span class=\"o\">:</span> <span class=\"p\">(</span>        <span class=\"n\">xs</span><span class=\"o\">:</span> <span class=\"s2\">\"(max-width : 480px)\"</span><span class=\"o\">,</span>        <span class=\"n\">sm</span><span class=\"o\">:</span> <span class=\"s2\">\"(max-width : 768px) and (min-width: 481px)\"</span><span class=\"o\">,</span>        <span class=\"n\">md</span><span class=\"o\">:</span> <span class=\"s2\">\"(max-width : 1024px)  and (min-width: 769px)\"</span><span class=\"o\">,</span>        <span class=\"n\">lg</span><span class=\"o\">:</span> <span class=\"s2\">\"(min-width : 1025px)\"</span>    <span class=\"p\">)</span><span class=\"p\">);</span></code></pre></div></div><h1 id=\"sql\">SQL</h1><div class=\"language-sql highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">SELECT</span> <span class=\"k\">column_name</span><span class=\"p\">,</span> <span class=\"k\">column_name</span> <span class=\"k\">FROM</span> <span class=\"k\">table_name</span><span class=\"p\">;</span></code></pre></div></div><h1 id=\"xml\">XML</h1><div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;employees&gt;</span>    <span class=\"nt\">&lt;employee&gt;</span>        <span class=\"nt\">&lt;firstName&gt;</span>John<span class=\"nt\">&lt;/firstName&gt;</span> <span class=\"nt\">&lt;lastName&gt;</span>Doe<span class=\"nt\">&lt;/lastName&gt;</span>    <span class=\"nt\">&lt;/employee&gt;</span><span class=\"nt\">&lt;/employees&gt;</span></code></pre></div></div>",
            "url": "https://cypherpunksamurai.github.io/Kusa-Jekyll/2016/01/02/code-highlighting",
            
            
            
            
            
            "date_published": "2016-01-02T00:00:00+00:00",
            "date_modified": "2016-01-02T00:00:00+00:00",
            
                "author":  {
                "name": "Kusa",
                "url": null,
                "avatar": null
                }
                
            
        },
    
        {
            "id": "https://cypherpunksamurai.github.io/Kusa-Jekyll/2016/01/02/headers-test",
            "title": "Jekyll Headers Test",
            "summary": "Jekyll Test page for headers",
            "content_text": "Headers TestThis is a test page for testing headers in JekyllHeader 1This is header 1Header 2This is header 2Header 3This is header 3Header 4This is header 4Header 5This is header 5",
            "content_html": "<h1 id=\"headers-test\">Headers Test</h1><p>This is a test page for testing headers in Jekyll</p><h1 id=\"header-1\">Header 1</h1><p>This is header 1</p><h2 id=\"header-2\">Header 2</h2><p>This is header 2</p><h3 id=\"header-3\">Header 3</h3><p>This is header 3</p><h4 id=\"header-4\">Header 4</h4><p>This is header 4</p><h5 id=\"header-5\">Header 5</h5><p>This is header 5</p>",
            "url": "https://cypherpunksamurai.github.io/Kusa-Jekyll/2016/01/02/headers-test",
            
            
            
            "tags": ["test","jekyll"],
            
            "date_published": "2016-01-02T00:00:00+00:00",
            "date_modified": "2016-01-02T00:00:00+00:00",
            
                "author":  {
                "name": "Kusa",
                "url": null,
                "avatar": null
                }
                
            
        },
    
        {
            "id": "https://cypherpunksamurai.github.io/Kusa-Jekyll/2015/07/31/places-where-you-can-learn-how-to-code",
            "title": "Places where you can learn how to code",
            "summary": "There many different options to learn to code online, so in this article, find places you can learn to code",
            "content_text": "Lorem ipsum dolor amet tousled viral art party blue bottle single-origin coffee cardigan, selvage man braid helvetica. Banh mi taxidermy meditation microdosing. Selvage cornhole YOLO, small batch vexillologist raclette VHS prism sustainable 8-bit ugh semiotics letterpress disrupt pop-up. Celiac shabby chic ugh, jianbing whatever kitsch tattooed edison bulb kogi irony etsy.Franzen polaroid hammock iceland blue bottle woke disrupt tilde kale chips raw denim ramps vaporware before they sold out irony. Narwhal vaporware offal shaman celiac kinfolk activated charcoal salvia lomo irony readymade normcore. Yr activated charcoal kombucha, man braid whatever biodiesel hella crucifix adaptogen bicycle rights small batch skateboard mixtape. Hot chicken sustainable green juice 90’s. Ennui kickstarter hella pug, meggings man bun shaman messenger bag. Chambray adaptogen kombucha pug affogato, kogi green juice distillery ugh banh mi.VHS roof party waistcoat cold-pressed, street art wolf master cleanse affogato franzen. Shaman iceland pour-over intelligentsia typewriter tilde, pitchfork copper mug. Wayfarers kickstarter adaptogen vinyl beard kombucha. Organic pinterest master cleanse, mixtape fam gentrify lo-fi kogi.Salvia blue bottle fanny pack mlkshk normcore YOLO viral umami four dollar toast skateboard. Chambray taxidermy slow-carb street art chartreuse. Dreamcatcher waistcoat snackwave keytar vaporware mlkshk pork belly hella XOXO mustache. Tattooed semiotics edison bulb, disrupt polaroid craft beer vape enamel pin bespoke flannel letterpress brooklyn subway tile copper mug. Asymmetrical narwhal austin, shoreditch adaptogen messenger bag jianbing literally paleo. Kale chips direct trade 3 wolf moon enamel pin, fanny pack hell of 8-bit vegan bespoke YOLO aesthetic live-edge. Retro succulents before they sold out whatever bushwick.Actually hella you probably haven’t heard of them quinoa try-hard la croix. Street art schlitz actually hell of pour-over air plant. Post-ironic franzen brunch mumblecore readymade. Food truck photo booth polaroid, gochujang vegan street art yr before they sold out man bun. Tilde selfies chia pitchfork everyday carry post-ironic mumblecore sartorial VHS master cleanse activated charcoal biodiesel williamsburg cronut jean shorts. Poutine helvetica keffiyeh butcher pop-up.",
            "content_html": "<p>Lorem ipsum dolor amet tousled viral art party blue bottle single-origin coffee cardigan, selvage man braid helvetica. Banh mi taxidermy meditation microdosing. Selvage cornhole YOLO, small batch vexillologist raclette VHS prism sustainable 8-bit ugh semiotics letterpress disrupt pop-up. Celiac shabby chic ugh, jianbing whatever kitsch tattooed edison bulb kogi irony etsy.</p><p>Franzen polaroid hammock iceland blue bottle woke disrupt tilde kale chips raw denim ramps vaporware before they sold out irony. Narwhal vaporware offal shaman celiac kinfolk activated charcoal salvia lomo irony readymade normcore. Yr activated charcoal kombucha, man braid whatever biodiesel hella crucifix adaptogen bicycle rights small batch skateboard mixtape. Hot chicken sustainable green juice 90’s. Ennui kickstarter hella pug, meggings man bun shaman messenger bag. Chambray adaptogen kombucha pug affogato, kogi green juice distillery ugh banh mi.</p><p>VHS roof party waistcoat cold-pressed, street art wolf master cleanse affogato franzen. Shaman iceland pour-over intelligentsia typewriter tilde, pitchfork copper mug. Wayfarers kickstarter adaptogen vinyl beard kombucha. Organic pinterest master cleanse, mixtape fam gentrify lo-fi kogi.</p><p>Salvia blue bottle fanny pack mlkshk normcore YOLO viral umami four dollar toast skateboard. Chambray taxidermy slow-carb street art chartreuse. Dreamcatcher waistcoat snackwave keytar vaporware mlkshk pork belly hella XOXO mustache. Tattooed semiotics edison bulb, disrupt polaroid craft beer vape enamel pin bespoke flannel letterpress brooklyn subway tile copper mug. Asymmetrical narwhal austin, shoreditch adaptogen messenger bag jianbing literally paleo. Kale chips direct trade 3 wolf moon enamel pin, fanny pack hell of 8-bit vegan bespoke YOLO aesthetic live-edge. Retro succulents before they sold out whatever bushwick.</p><p>Actually hella you probably haven’t heard of them quinoa try-hard la croix. Street art schlitz actually hell of pour-over air plant. Post-ironic franzen brunch mumblecore readymade. Food truck photo booth polaroid, gochujang vegan street art yr before they sold out man bun. Tilde selfies chia pitchfork everyday carry post-ironic mumblecore sartorial VHS master cleanse activated charcoal biodiesel williamsburg cronut jean shorts. Poutine helvetica keffiyeh butcher pop-up.</p>",
            "url": "https://cypherpunksamurai.github.io/Kusa-Jekyll/2015/07/31/places-where-you-can-learn-how-to-code",
            
            
            
            
            
            "date_published": "2015-07-31T00:00:00+01:00",
            "date_modified": "2015-07-31T00:00:00+01:00",
            
                "author":  {
                "name": "Kusa",
                "url": null,
                "avatar": null
                }
                
            
        },
    
        {
            "id": "https://cypherpunksamurai.github.io/Kusa-Jekyll/2014/05/12/css-hacks-you-may-not-know",
            "title": "CSS hacks you may not know",
            "summary": "This is a collection of short CSS snippets I thought might be useful for beginners",
            "content_text": "Lorem ipsum dolor amet tousled viral art party blue bottle single-origin coffee cardigan, selvage man braid helvetica. Banh mi taxidermy meditation microdosing. Selvage cornhole YOLO, small batch vexillologist raclette VHS prism sustainable 8-bit ugh semiotics letterpress disrupt pop-up. Celiac shabby chic ugh, jianbing whatever kitsch tattooed edison bulb kogi irony etsy.Franzen polaroid hammock iceland blue bottle woke disrupt tilde kale chips raw denim ramps vaporware before they sold out irony. Narwhal vaporware offal shaman celiac kinfolk activated charcoal salvia lomo irony readymade normcore. Yr activated charcoal kombucha, man braid whatever biodiesel hella crucifix adaptogen bicycle rights small batch skateboard mixtape. Hot chicken sustainable green juice 90’s. Ennui kickstarter hella pug, meggings man bun shaman messenger bag. Chambray adaptogen kombucha pug affogato, kogi green juice distillery ugh banh mi.int main (){\tint hello = 3;\tchar world = 'w';}Actually hella you probably haven’t heard of them quinoa try-hard la croix. Street art schlitz actually hell of pour-over air plant. Post-ironic franzen brunch mumblecore readymade. Food truck photo booth polaroid, gochujang vegan street art yr before they sold out man bun. Tilde selfies chia pitchfork everyday carry post-ironic mumblecore sartorial VHS master cleanse activated charcoal biodiesel williamsburg cronut jean shorts. Poutine helvetica keffiyeh butcher pop-up.import java.util.Scanner;  // Import the Scanner classclass Main {  public static void main(String[] args) {    Scanner myObj = new Scanner(System.in);  // Create a Scanner object    System.out.println(\"Enter username\");    String userName = myObj.nextLine();  // Read user input    System.out.println(\"Username is: \" + userName);  // Output user input  }}Actually hella you probably haven’t heard of them quinoa try-hard la croix. Street art schlitz actually hell of pour-over air plant. Post-ironic franzen brunch mumblecore readymade. Food truck photo booth polaroid, gochujang vegan street art yr before they sold out man bun. Tilde selfies chia pitchfork everyday carry post-ironic mumblecore sartorial VHS master cleanse activated charcoal biodiesel williamsburg cronut jean shorts. Poutine helvetica keffiyeh butcher pop-up.",
            "content_html": "<p>Lorem ipsum dolor amet tousled viral art party blue bottle single-origin coffee cardigan, selvage man braid helvetica. Banh mi taxidermy meditation microdosing. Selvage cornhole YOLO, small batch vexillologist raclette VHS prism sustainable 8-bit ugh semiotics letterpress disrupt pop-up. Celiac shabby chic ugh, jianbing whatever kitsch tattooed edison bulb kogi irony etsy.</p><p>Franzen polaroid hammock iceland blue bottle woke disrupt tilde kale chips raw denim ramps vaporware before they sold out irony. Narwhal vaporware offal shaman celiac kinfolk activated charcoal salvia lomo irony readymade normcore. Yr activated charcoal kombucha, man braid whatever biodiesel hella crucifix adaptogen bicycle rights small batch skateboard mixtape. Hot chicken sustainable green juice 90’s. Ennui kickstarter hella pug, meggings man bun shaman messenger bag. Chambray adaptogen kombucha pug affogato, kogi green juice distillery ugh banh mi.</p><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kt\">int</span> <span class=\"nf\">main</span> <span class=\"p\">(){</span>\t<span class=\"kt\">int</span> <span class=\"n\">hello</span> <span class=\"o\">=</span> <span class=\"mi\">3</span><span class=\"p\">;</span>\t<span class=\"kt\">char</span> <span class=\"n\">world</span> <span class=\"o\">=</span> <span class=\"sc\">'w'</span><span class=\"p\">;</span><span class=\"p\">}</span></code></pre></div></div><p>Actually hella you probably haven’t heard of them quinoa try-hard la croix. Street art schlitz actually hell of pour-over air plant. Post-ironic franzen brunch mumblecore readymade. Food truck photo booth polaroid, gochujang vegan street art yr before they sold out man bun. Tilde selfies chia pitchfork everyday carry post-ironic mumblecore sartorial VHS master cleanse activated charcoal biodiesel williamsburg cronut jean shorts. Poutine helvetica keffiyeh butcher pop-up.</p><div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">import</span> <span class=\"nn\">java.util.Scanner</span><span class=\"o\">;</span>  <span class=\"c1\">// Import the Scanner class</span><span class=\"kd\">class</span> <span class=\"nc\">Main</span> <span class=\"o\">{</span>  <span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"kt\">void</span> <span class=\"nf\">main</span><span class=\"o\">(</span><span class=\"nc\">String</span><span class=\"o\">[]</span> <span class=\"n\">args</span><span class=\"o\">)</span> <span class=\"o\">{</span>    <span class=\"nc\">Scanner</span> <span class=\"n\">myObj</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">Scanner</span><span class=\"o\">(</span><span class=\"nc\">System</span><span class=\"o\">.</span><span class=\"na\">in</span><span class=\"o\">);</span>  <span class=\"c1\">// Create a Scanner object</span>    <span class=\"nc\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">println</span><span class=\"o\">(</span><span class=\"s\">\"Enter username\"</span><span class=\"o\">);</span>    <span class=\"nc\">String</span> <span class=\"n\">userName</span> <span class=\"o\">=</span> <span class=\"n\">myObj</span><span class=\"o\">.</span><span class=\"na\">nextLine</span><span class=\"o\">();</span>  <span class=\"c1\">// Read user input</span>    <span class=\"nc\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">println</span><span class=\"o\">(</span><span class=\"s\">\"Username is: \"</span> <span class=\"o\">+</span> <span class=\"n\">userName</span><span class=\"o\">);</span>  <span class=\"c1\">// Output user input</span>  <span class=\"o\">}</span><span class=\"o\">}</span></code></pre></div></div><p>Actually hella you probably haven’t heard of them quinoa try-hard la croix. Street art schlitz actually hell of pour-over air plant. Post-ironic franzen brunch mumblecore readymade. Food truck photo booth polaroid, gochujang vegan street art yr before they sold out man bun. Tilde selfies chia pitchfork everyday carry post-ironic mumblecore sartorial VHS master cleanse activated charcoal biodiesel williamsburg cronut jean shorts. Poutine helvetica keffiyeh butcher pop-up.</p>",
            "url": "https://cypherpunksamurai.github.io/Kusa-Jekyll/2014/05/12/css-hacks-you-may-not-know",
            
            
            
            "tags": ["css","coding"],
            
            "date_published": "2014-05-12T00:00:00+01:00",
            "date_modified": "2014-05-12T00:00:00+01:00",
            
                "author":  {
                "name": "Kusa",
                "url": null,
                "avatar": null
                }
                
            
        }
    
    ]
}